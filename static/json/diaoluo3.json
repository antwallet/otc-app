{
  "v": "5.7.11",
  "fr": 25,
  "ip": 0,
  "op": 61,
  "w": 500,
  "h": 500,
  "nm": "Comp 34",
  "ddd": 0,
  "assets": [],
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 4,
      "nm": "Glitter 2",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            267.026,
            179.015,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            0,
            0,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 0,
          "k": [
            50,
            50,
            100
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "Rotation Speed",
          "np": 3,
          "mn": "ADBE Angle Control",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 0,
              "nm": "Angle",
              "mn": "ADBE Angle Control-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "sr",
              "sy": 1,
              "d": 1,
              "pt": {
                "a": 0,
                "k": 4,
                "ix": 3
              },
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 4
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "ir": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833
                      ],
                      "y": [
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167
                      ],
                      "y": [
                        0.167
                      ]
                    },
                    "t": 21,
                    "s": [
                      15
                    ]
                  },
                  {
                    "t": 41.0205078125,
                    "s": [
                      10
                    ]
                  }
                ],
                "ix": 6
              },
              "is": {
                "a": 0,
                "k": 234,
                "ix": 8
              },
              "or": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833
                      ],
                      "y": [
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.52
                      ],
                      "y": [
                        0
                      ]
                    },
                    "t": 21,
                    "s": [
                      33
                    ]
                  },
                  {
                    "t": 41.0205078125,
                    "s": [
                      200
                    ]
                  }
                ],
                "ix": 7
              },
              "os": {
                "a": 0,
                "k": 0,
                "ix": 9
              },
              "ix": 1,
              "nm": "Polystar Path 1",
              "mn": "ADBE Vector Shape - Star",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  1,
                  1,
                  1,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1 - AC Color 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.51,
                        0.51
                      ],
                      "y": [
                        1,
                        1
                      ]
                    },
                    "o": {
                      "x": [
                        0.49,
                        0.49
                      ],
                      "y": [
                        0,
                        0
                      ]
                    },
                    "t": 21,
                    "s": [
                      0,
                      0
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.51,
                        0.51
                      ],
                      "y": [
                        1,
                        1
                      ]
                    },
                    "o": {
                      "x": [
                        0.49,
                        0.49
                      ],
                      "y": [
                        0,
                        0
                      ]
                    },
                    "t": 26.005,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "t": 41.8544921875,
                    "s": [
                      0,
                      0
                    ]
                  }
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6,
                "x": "var $bm_rt;\n$bm_rt = $bm_sum(value, $bm_mul(time, effect('Rotation Speed')('ADBE Angle Control-0001')));"
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Polystar 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 21,
      "op": 42.6883550216884,
      "st": 21,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 4,
      "nm": "Glitter 1",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            227.866,
            154.689,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            0,
            0,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 0,
          "k": [
            50,
            50,
            100
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "Rotation Speed",
          "np": 3,
          "mn": "ADBE Angle Control",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 0,
              "nm": "Angle",
              "mn": "ADBE Angle Control-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "sr",
              "sy": 1,
              "d": 1,
              "pt": {
                "a": 0,
                "k": 4,
                "ix": 3
              },
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 4
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "ir": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833
                      ],
                      "y": [
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167
                      ],
                      "y": [
                        0.167
                      ]
                    },
                    "t": 26,
                    "s": [
                      15
                    ]
                  },
                  {
                    "t": 46.0205078125,
                    "s": [
                      10
                    ]
                  }
                ],
                "ix": 6
              },
              "is": {
                "a": 0,
                "k": 234,
                "ix": 8
              },
              "or": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833
                      ],
                      "y": [
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.52
                      ],
                      "y": [
                        0
                      ]
                    },
                    "t": 26,
                    "s": [
                      33
                    ]
                  },
                  {
                    "t": 46.0205078125,
                    "s": [
                      200
                    ]
                  }
                ],
                "ix": 7
              },
              "os": {
                "a": 0,
                "k": 0,
                "ix": 9
              },
              "ix": 1,
              "nm": "Polystar Path 1",
              "mn": "ADBE Vector Shape - Star",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  1,
                  1,
                  1,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1 - AC Color 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.51,
                        0.51
                      ],
                      "y": [
                        1,
                        1
                      ]
                    },
                    "o": {
                      "x": [
                        0.49,
                        0.49
                      ],
                      "y": [
                        0,
                        0
                      ]
                    },
                    "t": 26,
                    "s": [
                      0,
                      0
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.51,
                        0.51
                      ],
                      "y": [
                        1,
                        1
                      ]
                    },
                    "o": {
                      "x": [
                        0.49,
                        0.49
                      ],
                      "y": [
                        0,
                        0
                      ]
                    },
                    "t": 31.005,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "t": 46.8544921875,
                    "s": [
                      0,
                      0
                    ]
                  }
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6,
                "x": "var $bm_rt;\n$bm_rt = $bm_sum(value, $bm_mul(time, effect('Rotation Speed')('ADBE Angle Control-0001')));"
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Polystar 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 26,
      "op": 47.6883550216884,
      "st": 26,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 3,
      "ty": 4,
      "nm": "Layer 1",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            250.002,
            336.214,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            0.002,
            86.214,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 0,
          "k": [
            100,
            100,
            100
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "Kleaner",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              1.846,
                              0.833
                            ],
                            [
                              2.63,
                              0.726
                            ],
                            [
                              1.051,
                              0.427
                            ],
                            [
                              0.573,
                              0.628
                            ],
                            [
                              0,
                              0.817
                            ],
                            [
                              -1.109,
                              0.768
                            ],
                            [
                              -2.213,
                              0
                            ],
                            [
                              -2.251,
                              -0.887
                            ],
                            [
                              -0.437,
                              0
                            ],
                            [
                              -0.698,
                              0.942
                            ],
                            [
                              0,
                              1.033
                            ],
                            [
                              1.576,
                              0.644
                            ],
                            [
                              3.773,
                              0
                            ],
                            [
                              2.126,
                              -1.147
                            ],
                            [
                              1.152,
                              -2.03
                            ],
                            [
                              0,
                              -2.467
                            ],
                            [
                              -1.45,
                              -1.807
                            ],
                            [
                              -1.867,
                              -0.839
                            ],
                            [
                              -2.691,
                              -0.801
                            ],
                            [
                              -1.035,
                              -0.411
                            ],
                            [
                              -0.552,
                              -0.562
                            ],
                            [
                              0,
                              -0.601
                            ],
                            [
                              6.062,
                              0
                            ],
                            [
                              2.739,
                              1.396
                            ],
                            [
                              1.115,
                              -1.358
                            ],
                            [
                              0,
                              -1.11
                            ],
                            [
                              -0.454,
                              -0.742
                            ],
                            [
                              -0.688,
                              -0.33
                            ],
                            [
                              -4.351,
                              0
                            ],
                            [
                              -2.106,
                              1.039
                            ],
                            [
                              -1.223,
                              1.943
                            ],
                            [
                              0,
                              2.463
                            ],
                            [
                              1.38,
                              1.824
                            ]
                          ],
                          "o": [
                            [
                              -1.656,
                              -0.742
                            ],
                            [
                              -1.937,
                              -0.509
                            ],
                            [
                              -0.91,
                              -0.368
                            ],
                            [
                              -0.434,
                              -0.471
                            ],
                            [
                              0,
                              -1.358
                            ],
                            [
                              1.31,
                              -0.909
                            ],
                            [
                              2.473,
                              0
                            ],
                            [
                              0.546,
                              0.255
                            ],
                            [
                              1.122,
                              0
                            ],
                            [
                              0.612,
                              -0.833
                            ],
                            [
                              0,
                              -1.905
                            ],
                            [
                              -3.08,
                              -1.304
                            ],
                            [
                              -2.927,
                              0
                            ],
                            [
                              -2.181,
                              1.175
                            ],
                            [
                              -1.136,
                              2.024
                            ],
                            [
                              0,
                              2.874
                            ],
                            [
                              1.342,
                              1.662
                            ],
                            [
                              1.673,
                              0.747
                            ],
                            [
                              1.872,
                              0.557
                            ],
                            [
                              0.849,
                              0.341
                            ],
                            [
                              0.379,
                              0.39
                            ],
                            [
                              0,
                              1.932
                            ],
                            [
                              -3.128,
                              0
                            ],
                            [
                              -1.472,
                              -0.769
                            ],
                            [
                              -0.655,
                              0.817
                            ],
                            [
                              0,
                              0.871
                            ],
                            [
                              0.444,
                              0.731
                            ],
                            [
                              3.821,
                              1.889
                            ],
                            [
                              2.701,
                              0
                            ],
                            [
                              2.165,
                              -1.066
                            ],
                            [
                              1.234,
                              -1.97
                            ],
                            [
                              0,
                              -2.971
                            ],
                            [
                              -1.294,
                              -1.721
                            ]
                          ],
                          "v": [
                            [
                              81.155,
                              84.277
                            ],
                            [
                              74.698,
                              82.074
                            ],
                            [
                              70.195,
                              80.661
                            ],
                            [
                              67.96,
                              79.157
                            ],
                            [
                              67.32,
                              77.241
                            ],
                            [
                              68.922,
                              74.166
                            ],
                            [
                              74.232,
                              72.797
                            ],
                            [
                              81.377,
                              74.145
                            ],
                            [
                              82.843,
                              74.523
                            ],
                            [
                              85.625,
                              73.089
                            ],
                            [
                              86.545,
                              70.275
                            ],
                            [
                              84.066,
                              66.264
                            ],
                            [
                              73.745,
                              64.294
                            ],
                            [
                              66.125,
                              66.026
                            ],
                            [
                              61.097,
                              70.86
                            ],
                            [
                              59.38,
                              77.63
                            ],
                            [
                              61.567,
                              84.687
                            ],
                            [
                              66.405,
                              88.455
                            ],
                            [
                              72.982,
                              90.788
                            ],
                            [
                              77.42,
                              92.27
                            ],
                            [
                              79.531,
                              93.629
                            ],
                            [
                              80.066,
                              95.02
                            ],
                            [
                              73.306,
                              99.523
                            ],
                            [
                              64.468,
                              97.418
                            ],
                            [
                              60.03,
                              98.36
                            ],
                            [
                              59.04,
                              101.261
                            ],
                            [
                              59.721,
                              103.685
                            ],
                            [
                              61.432,
                              105.287
                            ],
                            [
                              73.745,
                              108.134
                            ],
                            [
                              80.992,
                              106.57
                            ],
                            [
                              86.096,
                              102.034
                            ],
                            [
                              87.958,
                              95.356
                            ],
                            [
                              85.88,
                              88.125
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.286274522543,
                          0.482352942228,
                          0.996078431606,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              1.38,
                              1.824
                            ],
                            [
                              1.846,
                              0.833
                            ],
                            [
                              2.63,
                              0.725
                            ],
                            [
                              1.05,
                              0.428
                            ],
                            [
                              0.574,
                              0.628
                            ],
                            [
                              0,
                              0.817
                            ],
                            [
                              -1.11,
                              0.769
                            ],
                            [
                              -2.214,
                              0
                            ],
                            [
                              -2.252,
                              -0.888
                            ],
                            [
                              -0.438,
                              0
                            ],
                            [
                              -0.698,
                              0.942
                            ],
                            [
                              0,
                              1.034
                            ],
                            [
                              1.575,
                              0.644
                            ],
                            [
                              3.772,
                              0
                            ],
                            [
                              2.127,
                              -1.147
                            ],
                            [
                              1.153,
                              -2.03
                            ],
                            [
                              0,
                              -2.468
                            ],
                            [
                              -1.451,
                              -1.808
                            ],
                            [
                              -1.867,
                              -0.839
                            ],
                            [
                              -2.69,
                              -0.801
                            ],
                            [
                              -1.034,
                              -0.411
                            ],
                            [
                              -0.552,
                              -0.563
                            ],
                            [
                              0,
                              -0.601
                            ],
                            [
                              6.062,
                              0
                            ],
                            [
                              2.739,
                              1.396
                            ],
                            [
                              1.115,
                              -1.359
                            ],
                            [
                              0,
                              -1.11
                            ],
                            [
                              -0.455,
                              -0.741
                            ],
                            [
                              -0.687,
                              -0.33
                            ],
                            [
                              -4.352,
                              0
                            ],
                            [
                              -2.105,
                              1.039
                            ],
                            [
                              -1.223,
                              1.943
                            ],
                            [
                              0,
                              2.463
                            ]
                          ],
                          "o": [
                            [
                              -1.294,
                              -1.721
                            ],
                            [
                              -1.656,
                              -0.741
                            ],
                            [
                              -1.938,
                              -0.509
                            ],
                            [
                              -0.909,
                              -0.368
                            ],
                            [
                              -0.433,
                              -0.471
                            ],
                            [
                              0,
                              -1.359
                            ],
                            [
                              1.31,
                              -0.909
                            ],
                            [
                              2.473,
                              0
                            ],
                            [
                              0.547,
                              0.254
                            ],
                            [
                              1.12,
                              0
                            ],
                            [
                              0.612,
                              -0.833
                            ],
                            [
                              0,
                              -1.905
                            ],
                            [
                              -3.08,
                              -1.304
                            ],
                            [
                              -2.928,
                              0
                            ],
                            [
                              -2.181,
                              1.174
                            ],
                            [
                              -1.137,
                              2.024
                            ],
                            [
                              0,
                              2.874
                            ],
                            [
                              1.342,
                              1.662
                            ],
                            [
                              1.672,
                              0.747
                            ],
                            [
                              1.873,
                              0.557
                            ],
                            [
                              0.85,
                              0.341
                            ],
                            [
                              0.379,
                              0.39
                            ],
                            [
                              0,
                              1.932
                            ],
                            [
                              -3.128,
                              0
                            ],
                            [
                              -1.472,
                              -0.769
                            ],
                            [
                              -0.655,
                              0.817
                            ],
                            [
                              0,
                              0.871
                            ],
                            [
                              0.444,
                              0.731
                            ],
                            [
                              3.821,
                              1.889
                            ],
                            [
                              2.701,
                              0
                            ],
                            [
                              2.165,
                              -1.066
                            ],
                            [
                              1.234,
                              -1.97
                            ],
                            [
                              0,
                              -2.971
                            ]
                          ],
                          "v": [
                            [
                              85.879,
                              88.125
                            ],
                            [
                              81.154,
                              84.277
                            ],
                            [
                              74.698,
                              82.074
                            ],
                            [
                              70.194,
                              80.661
                            ],
                            [
                              67.959,
                              79.157
                            ],
                            [
                              67.32,
                              77.241
                            ],
                            [
                              68.923,
                              74.166
                            ],
                            [
                              74.232,
                              72.797
                            ],
                            [
                              81.376,
                              74.145
                            ],
                            [
                              82.843,
                              74.524
                            ],
                            [
                              85.625,
                              73.089
                            ],
                            [
                              86.545,
                              70.275
                            ],
                            [
                              84.066,
                              66.264
                            ],
                            [
                              73.745,
                              64.294
                            ],
                            [
                              66.124,
                              66.026
                            ],
                            [
                              61.096,
                              70.859
                            ],
                            [
                              59.381,
                              77.63
                            ],
                            [
                              61.567,
                              84.688
                            ],
                            [
                              66.406,
                              88.455
                            ],
                            [
                              72.982,
                              90.788
                            ],
                            [
                              77.42,
                              92.271
                            ],
                            [
                              79.531,
                              93.629
                            ],
                            [
                              80.067,
                              95.02
                            ],
                            [
                              73.307,
                              99.523
                            ],
                            [
                              64.468,
                              97.418
                            ],
                            [
                              60.03,
                              98.36
                            ],
                            [
                              59.04,
                              101.261
                            ],
                            [
                              59.722,
                              103.685
                            ],
                            [
                              61.432,
                              105.287
                            ],
                            [
                              73.745,
                              108.134
                            ],
                            [
                              80.992,
                              106.57
                            ],
                            [
                              86.096,
                              102.035
                            ],
                            [
                              87.958,
                              95.356
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.313725501299,
                          0.580392181873,
                          1,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 2",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 2,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 16,
                    "s": [
                      58.874,
                      86.339
                    ],
                    "to": [
                      0,
                      -0.75
                    ],
                    "ti": [
                      0,
                      0.25
                    ]
                  },
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 21,
                    "s": [
                      58.874,
                      81.839
                    ],
                    "to": [
                      0,
                      -0.25
                    ],
                    "ti": [
                      0,
                      -0.5
                    ]
                  },
                  {
                    "t": 26,
                    "s": [
                      58.874,
                      84.839
                    ]
                  }
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  58.898,
                  86.304
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 16.091,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 21.546,
                    "s": [
                      120,
                      120
                    ]
                  },
                  {
                    "t": 27,
                    "s": [
                      100,
                      100
                    ]
                  }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 13",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              -1.543,
                              -2.598
                            ],
                            [
                              -2.431,
                              -1.272
                            ],
                            [
                              -2.554,
                              0
                            ],
                            [
                              -2.376,
                              1.234
                            ],
                            [
                              -1.531,
                              2.565
                            ],
                            [
                              0,
                              3.67
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.758,
                              0.861
                            ],
                            [
                              1.115,
                              0
                            ],
                            [
                              0.753,
                              -0.898
                            ],
                            [
                              0,
                              -1.191
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.708,
                              -1.24
                            ],
                            [
                              1.148,
                              -0.611
                            ],
                            [
                              2.403,
                              1.289
                            ],
                            [
                              0.714,
                              1.239
                            ],
                            [
                              0,
                              1.852
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.463,
                              0.739
                            ],
                            [
                              2.417,
                              -0.939
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "o": [
                            [
                              1.532,
                              2.565
                            ],
                            [
                              2.376,
                              1.229
                            ],
                            [
                              2.55,
                              0
                            ],
                            [
                              2.43,
                              -1.266
                            ],
                            [
                              1.543,
                              -2.593
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              -1.212
                            ],
                            [
                              -0.774,
                              -0.893
                            ],
                            [
                              -1.115,
                              0
                            ],
                            [
                              -0.719,
                              0.861
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              1.856
                            ],
                            [
                              -0.721,
                              1.25
                            ],
                            [
                              -2.414,
                              1.289
                            ],
                            [
                              -1.152,
                              -0.617
                            ],
                            [
                              -0.71,
                              -1.256
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              -0.949
                            ],
                            [
                              -2.362,
                              0.932
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              3.659
                            ]
                          ],
                          "v": [
                            [
                              26.468,
                              100.497
                            ],
                            [
                              32.438,
                              106.278
                            ],
                            [
                              39.869,
                              108.134
                            ],
                            [
                              47.295,
                              106.272
                            ],
                            [
                              53.264,
                              100.497
                            ],
                            [
                              55.592,
                              91.064
                            ],
                            [
                              55.592,
                              69.046
                            ],
                            [
                              54.45,
                              65.918
                            ],
                            [
                              51.598,
                              64.576
                            ],
                            [
                              48.739,
                              65.95
                            ],
                            [
                              47.652,
                              69.046
                            ],
                            [
                              47.652,
                              91.231
                            ],
                            [
                              46.581,
                              95.903
                            ],
                            [
                              43.766,
                              98.711
                            ],
                            [
                              35.966,
                              98.711
                            ],
                            [
                              33.152,
                              95.908
                            ],
                            [
                              32.081,
                              91.231
                            ],
                            [
                              32.081,
                              69.046
                            ],
                            [
                              31.313,
                              66.539
                            ],
                            [
                              24.141,
                              69.347
                            ],
                            [
                              24.141,
                              91.064
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.286274522543,
                          0.482352942228,
                          0.996078431606,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              1.115,
                              0
                            ],
                            [
                              0.752,
                              -0.898
                            ],
                            [
                              0,
                              -1.191
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.709,
                              -1.239
                            ],
                            [
                              1.147,
                              -0.612
                            ],
                            [
                              2.403,
                              1.288
                            ],
                            [
                              0.714,
                              1.239
                            ],
                            [
                              0,
                              1.851
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.752,
                              0.861
                            ],
                            [
                              1.12,
                              0
                            ],
                            [
                              0.752,
                              -0.893
                            ],
                            [
                              0,
                              -1.196
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -1.543,
                              -2.598
                            ],
                            [
                              -2.43,
                              -1.272
                            ],
                            [
                              -2.555,
                              0
                            ],
                            [
                              -2.376,
                              1.234
                            ],
                            [
                              -1.532,
                              2.565
                            ],
                            [
                              0,
                              3.67
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.758,
                              0.861
                            ]
                          ],
                          "o": [
                            [
                              -1.115,
                              0
                            ],
                            [
                              -0.72,
                              0.861
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              1.856
                            ],
                            [
                              -0.72,
                              1.25
                            ],
                            [
                              -2.414,
                              1.288
                            ],
                            [
                              -1.153,
                              -0.617
                            ],
                            [
                              -0.709,
                              -1.256
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              -1.212
                            ],
                            [
                              -0.774,
                              -0.893
                            ],
                            [
                              -1.11,
                              0
                            ],
                            [
                              -0.725,
                              0.861
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              3.659
                            ],
                            [
                              1.532,
                              2.565
                            ],
                            [
                              2.376,
                              1.229
                            ],
                            [
                              2.549,
                              0
                            ],
                            [
                              2.43,
                              -1.266
                            ],
                            [
                              1.543,
                              -2.593
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              -1.212
                            ],
                            [
                              -0.774,
                              -0.893
                            ]
                          ],
                          "v": [
                            [
                              51.598,
                              64.576
                            ],
                            [
                              48.74,
                              65.95
                            ],
                            [
                              47.652,
                              69.046
                            ],
                            [
                              47.652,
                              91.231
                            ],
                            [
                              46.58,
                              95.902
                            ],
                            [
                              43.766,
                              98.711
                            ],
                            [
                              35.967,
                              98.711
                            ],
                            [
                              33.152,
                              95.908
                            ],
                            [
                              32.081,
                              91.231
                            ],
                            [
                              32.081,
                              69.046
                            ],
                            [
                              30.944,
                              65.918
                            ],
                            [
                              28.086,
                              64.576
                            ],
                            [
                              25.234,
                              65.945
                            ],
                            [
                              24.141,
                              69.046
                            ],
                            [
                              24.141,
                              91.064
                            ],
                            [
                              26.468,
                              100.497
                            ],
                            [
                              32.438,
                              106.278
                            ],
                            [
                              39.869,
                              108.134
                            ],
                            [
                              47.295,
                              106.272
                            ],
                            [
                              53.265,
                              100.497
                            ],
                            [
                              55.592,
                              91.064
                            ],
                            [
                              55.592,
                              69.046
                            ],
                            [
                              54.45,
                              65.918
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.313725501299,
                          0.580392181873,
                          1,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 2",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 2,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 13,
                    "s": [
                      24.179,
                      86.48
                    ],
                    "to": [
                      0,
                      -0.75
                    ],
                    "ti": [
                      0,
                      0.25
                    ]
                  },
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 18,
                    "s": [
                      24.179,
                      81.98
                    ],
                    "to": [
                      0,
                      -0.25
                    ],
                    "ti": [
                      0,
                      -0.5
                    ]
                  },
                  {
                    "t": 23,
                    "s": [
                      24.179,
                      84.98
                    ]
                  }
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  24.207,
                  86.443
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 12.818,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 18.272,
                    "s": [
                      120,
                      120
                    ]
                  },
                  {
                    "t": 23.7275390625,
                    "s": [
                      100,
                      100
                    ]
                  }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 12",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0,
                              0
                            ],
                            [
                              -0.677,
                              -0.411
                            ],
                            [
                              -0.822,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -0.98,
                              1.088
                            ],
                            [
                              0,
                              1.509
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              2.67,
                              -1.006
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              2.569,
                              -0.928
                            ]
                          ],
                          "o": [
                            [
                              0.444,
                              0.671
                            ],
                            [
                              0.714,
                              0.443
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              1.363,
                              0
                            ],
                            [
                              0.952,
                              -1.072
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -2.618,
                              1.005
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -2.536,
                              0.934
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "v": [
                            [
                              8.894,
                              105.552
                            ],
                            [
                              10.578,
                              107.187
                            ],
                            [
                              12.899,
                              107.853
                            ],
                            [
                              13.485,
                              107.853
                            ],
                            [
                              17.013,
                              106.218
                            ],
                            [
                              18.452,
                              102.322
                            ],
                            [
                              18.452,
                              71.544
                            ],
                            [
                              10.513,
                              74.561
                            ],
                            [
                              10.513,
                              92.763
                            ],
                            [
                              1.528,
                              77.907
                            ],
                            [
                              -6.128,
                              80.701
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.286274522543,
                          0.482352942228,
                          0.996078431606,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              1.12,
                              0
                            ],
                            [
                              0.752,
                              -0.893
                            ],
                            [
                              0,
                              -1.196
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              1.624,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.963,
                              -1.126
                            ],
                            [
                              0,
                              -1.494
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -0.741,
                              -0.844
                            ],
                            [
                              -1.543,
                              1.699
                            ],
                            [
                              0,
                              1.229
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -0.677,
                              -0.411
                            ],
                            [
                              -0.823,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -0.98,
                              1.088
                            ],
                            [
                              0,
                              1.51
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.752,
                              0.861
                            ]
                          ],
                          "o": [
                            [
                              -1.11,
                              0
                            ],
                            [
                              -0.725,
                              0.861
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -1.093,
                              -1.629
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -1.386,
                              0
                            ],
                            [
                              -0.92,
                              1.088
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              1.212
                            ],
                            [
                              1.499,
                              1.71
                            ],
                            [
                              0.774,
                              -0.85
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.444,
                              0.671
                            ],
                            [
                              0.714,
                              0.444
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              1.364,
                              0
                            ],
                            [
                              0.953,
                              -1.072
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              -1.212
                            ],
                            [
                              -0.774,
                              -0.893
                            ]
                          ],
                          "v": [
                            [
                              14.458,
                              64.576
                            ],
                            [
                              11.606,
                              65.945
                            ],
                            [
                              10.512,
                              69.046
                            ],
                            [
                              10.512,
                              92.763
                            ],
                            [
                              -5.053,
                              67.027
                            ],
                            [
                              -9.145,
                              64.576
                            ],
                            [
                              -9.778,
                              64.576
                            ],
                            [
                              -13.313,
                              66.27
                            ],
                            [
                              -14.698,
                              70.161
                            ],
                            [
                              -14.698,
                              103.436
                            ],
                            [
                              -13.583,
                              106.538
                            ],
                            [
                              -7.922,
                              106.565
                            ],
                            [
                              -6.758,
                              103.436
                            ],
                            [
                              -6.758,
                              79.66
                            ],
                            [
                              8.894,
                              105.553
                            ],
                            [
                              10.577,
                              107.187
                            ],
                            [
                              12.899,
                              107.853
                            ],
                            [
                              13.484,
                              107.853
                            ],
                            [
                              17.013,
                              106.218
                            ],
                            [
                              18.452,
                              102.321
                            ],
                            [
                              18.452,
                              69.046
                            ],
                            [
                              17.316,
                              65.918
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.313725501299,
                          0.580392181873,
                          1,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 2",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 2,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 3",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 10,
                    "s": [
                      -14.623,
                      86.152
                    ],
                    "to": [
                      0,
                      -0.75
                    ],
                    "ti": [
                      0,
                      0.25
                    ]
                  },
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 15,
                    "s": [
                      -14.623,
                      81.652
                    ],
                    "to": [
                      0,
                      -0.25
                    ],
                    "ti": [
                      0,
                      -0.5
                    ]
                  },
                  {
                    "t": 20,
                    "s": [
                      -14.623,
                      84.652
                    ]
                  }
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  -14.608,
                  86.132
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 9.546,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 15,
                    "s": [
                      120,
                      120
                    ]
                  },
                  {
                    "t": 20.4541015625,
                    "s": [
                      100,
                      100
                    ]
                  }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 11",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 3,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              -2.836,
                              -1.9
                            ],
                            [
                              -3.718,
                              0
                            ],
                            [
                              -2.814,
                              1.894
                            ],
                            [
                              -1.559,
                              3.334
                            ],
                            [
                              -0.071,
                              4.189
                            ],
                            [
                              0.017,
                              0.349
                            ],
                            [
                              2.686,
                              -0.913
                            ],
                            [
                              0.684,
                              -1.57
                            ],
                            [
                              1.624,
                              -1.136
                            ],
                            [
                              2.241,
                              0
                            ],
                            [
                              1.607,
                              1.131
                            ],
                            [
                              0.806,
                              1.402
                            ],
                            [
                              2.615,
                              -0.803
                            ],
                            [
                              -0.096,
                              -0.206
                            ]
                          ],
                          "o": [
                            [
                              2.836,
                              1.884
                            ],
                            [
                              3.718,
                              0
                            ],
                            [
                              2.815,
                              -1.884
                            ],
                            [
                              1.521,
                              -3.275
                            ],
                            [
                              -0.007,
                              -0.355
                            ],
                            [
                              -2.665,
                              0.929
                            ],
                            [
                              -0.158,
                              1.913
                            ],
                            [
                              -0.866,
                              1.97
                            ],
                            [
                              -1.624,
                              1.131
                            ],
                            [
                              -2.268,
                              0
                            ],
                            [
                              -1.257,
                              -0.883
                            ],
                            [
                              -2.612,
                              0.829
                            ],
                            [
                              0.09,
                              0.209
                            ],
                            [
                              1.525,
                              3.307
                            ]
                          ],
                          "v": [
                            [
                              -47.302,
                              105.293
                            ],
                            [
                              -37.424,
                              108.134
                            ],
                            [
                              -27.575,
                              105.282
                            ],
                            [
                              -20.987,
                              97.418
                            ],
                            [
                              -18.584,
                              86.182
                            ],
                            [
                              -18.65,
                              85.142
                            ],
                            [
                              -26.677,
                              87.907
                            ],
                            [
                              -27.861,
                              93.196
                            ],
                            [
                              -31.606,
                              97.872
                            ],
                            [
                              -37.424,
                              99.577
                            ],
                            [
                              -43.264,
                              97.872
                            ],
                            [
                              -46.297,
                              94.356
                            ],
                            [
                              -54.137,
                              96.803
                            ],
                            [
                              -53.883,
                              97.445
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.286274522543,
                          0.482352942228,
                          0.996078431606,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0,
                              -2.598
                            ],
                            [
                              0.888,
                              -2.035
                            ],
                            [
                              1.624,
                              -1.137
                            ],
                            [
                              2.241,
                              0
                            ],
                            [
                              1.607,
                              1.131
                            ],
                            [
                              0.861,
                              1.97
                            ],
                            [
                              0,
                              2.598
                            ],
                            [
                              -0.888,
                              2.035
                            ],
                            [
                              -1.618,
                              1.137
                            ],
                            [
                              -2.268,
                              0
                            ],
                            [
                              -1.624,
                              -1.131
                            ],
                            [
                              -0.861,
                              -1.97
                            ]
                          ],
                          "o": [
                            [
                              0,
                              2.598
                            ],
                            [
                              -0.866,
                              1.97
                            ],
                            [
                              -1.624,
                              1.131
                            ],
                            [
                              -2.268,
                              0
                            ],
                            [
                              -1.607,
                              -1.131
                            ],
                            [
                              -0.888,
                              -2.035
                            ],
                            [
                              0,
                              -2.598
                            ],
                            [
                              0.855,
                              -1.965
                            ],
                            [
                              1.602,
                              -1.131
                            ],
                            [
                              2.241,
                              0
                            ],
                            [
                              1.624,
                              1.131
                            ],
                            [
                              0.888,
                              2.035
                            ]
                          ],
                          "v": [
                            [
                              -26.524,
                              86.214
                            ],
                            [
                              -27.861,
                              93.196
                            ],
                            [
                              -31.606,
                              97.872
                            ],
                            [
                              -37.425,
                              99.577
                            ],
                            [
                              -43.265,
                              97.872
                            ],
                            [
                              -46.988,
                              93.196
                            ],
                            [
                              -48.325,
                              86.214
                            ],
                            [
                              -46.988,
                              79.232
                            ],
                            [
                              -43.259,
                              74.556
                            ],
                            [
                              -37.425,
                              72.851
                            ],
                            [
                              -31.606,
                              74.556
                            ],
                            [
                              -27.866,
                              79.232
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ind": 1,
                      "ty": "sh",
                      "ix": 2,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              2.82,
                              1.883
                            ],
                            [
                              3.718,
                              0
                            ],
                            [
                              2.836,
                              -1.883
                            ],
                            [
                              1.532,
                              -3.312
                            ],
                            [
                              0.065,
                              -4.227
                            ],
                            [
                              -1.515,
                              -3.253
                            ],
                            [
                              -2.836,
                              -1.9
                            ],
                            [
                              -3.718,
                              0
                            ],
                            [
                              -2.814,
                              1.894
                            ],
                            [
                              -1.559,
                              3.334
                            ],
                            [
                              -0.07,
                              4.189
                            ],
                            [
                              1.521,
                              3.274
                            ]
                          ],
                          "o": [
                            [
                              -2.814,
                              -1.894
                            ],
                            [
                              -3.718,
                              0
                            ],
                            [
                              -2.836,
                              1.894
                            ],
                            [
                              -1.515,
                              3.253
                            ],
                            [
                              0.065,
                              4.178
                            ],
                            [
                              1.526,
                              3.307
                            ],
                            [
                              2.836,
                              1.883
                            ],
                            [
                              3.718,
                              0
                            ],
                            [
                              2.814,
                              -1.883
                            ],
                            [
                              1.521,
                              -3.274
                            ],
                            [
                              -0.07,
                              -4.14
                            ],
                            [
                              -1.553,
                              -3.334
                            ]
                          ],
                          "v": [
                            [
                              -27.574,
                              67.147
                            ],
                            [
                              -37.425,
                              64.294
                            ],
                            [
                              -47.302,
                              67.136
                            ],
                            [
                              -53.884,
                              74.984
                            ],
                            [
                              -56.265,
                              86.247
                            ],
                            [
                              -53.884,
                              97.445
                            ],
                            [
                              -47.302,
                              105.293
                            ],
                            [
                              -37.425,
                              108.134
                            ],
                            [
                              -27.574,
                              105.282
                            ],
                            [
                              -20.987,
                              97.418
                            ],
                            [
                              -18.584,
                              86.182
                            ],
                            [
                              -20.987,
                              75.011
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 2",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.313725501299,
                          0.580392181873,
                          1,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 2",
                  "np": 3,
                  "cix": 2,
                  "bm": 0,
                  "ix": 2,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 5",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 7,
                    "s": [
                      -56.05,
                      86.214
                    ],
                    "to": [
                      0,
                      -0.833
                    ],
                    "ti": [
                      0,
                      0
                    ]
                  },
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 12,
                    "s": [
                      -56.05,
                      81.214
                    ],
                    "to": [
                      0,
                      0
                    ],
                    "ti": [
                      0,
                      -0.833
                    ]
                  },
                  {
                    "t": 17,
                    "s": [
                      -56.05,
                      86.214
                    ]
                  }
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  -56.046,
                  86.21
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 6.272,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 11.728,
                    "s": [
                      120,
                      120
                    ]
                  },
                  {
                    "t": 17.181640625,
                    "s": [
                      100,
                      100
                    ]
                  }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 9",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 4,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              -1.115,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -2.338,
                              2.241
                            ],
                            [
                              -0.508,
                              2.441
                            ],
                            [
                              9.438,
                              -2.428
                            ],
                            [
                              -0.041,
                              -0.047
                            ]
                          ],
                          "o": [
                            [
                              0,
                              0
                            ],
                            [
                              4.73,
                              0
                            ],
                            [
                              1.673,
                              -1.609
                            ],
                            [
                              -9.589,
                              2.891
                            ],
                            [
                              0.039,
                              0.048
                            ],
                            [
                              0.763,
                              0.877
                            ]
                          ],
                          "v": [
                            [
                              -84.003,
                              107.577
                            ],
                            [
                              -72.226,
                              107.577
                            ],
                            [
                              -61.569,
                              104.2
                            ],
                            [
                              -58.328,
                              98.084
                            ],
                            [
                              -86.927,
                              106.101
                            ],
                            [
                              -86.834,
                              106.256
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.286274522543,
                          0.482352942228,
                          0.996078431606,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              -1.905
                            ],
                            [
                              0.888,
                              -0.747
                            ],
                            [
                              2.69,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "o": [
                            [
                              0,
                              0
                            ],
                            [
                              6.148,
                              0
                            ],
                            [
                              0,
                              1.456
                            ],
                            [
                              -0.974,
                              0.833
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "v": [
                            [
                              -80.009,
                              90.073
                            ],
                            [
                              -72.616,
                              90.073
                            ],
                            [
                              -65.758,
                              94.517
                            ],
                            [
                              -67.057,
                              97.748
                            ],
                            [
                              -72.664,
                              99.02
                            ],
                            [
                              -80.009,
                              99.02
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ind": 1,
                      "ty": "sh",
                      "ix": 2,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0.785,
                              -0.741
                            ],
                            [
                              2.403,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -0.926,
                              -0.774
                            ],
                            [
                              0,
                              -1.142
                            ]
                          ],
                          "o": [
                            [
                              -0.812,
                              0.779
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              1.77,
                              0
                            ],
                            [
                              0.812,
                              0.677
                            ],
                            [
                              0,
                              1.445
                            ]
                          ],
                          "v": [
                            [
                              -68.768,
                              80.488
                            ],
                            [
                              -73.687,
                              81.684
                            ],
                            [
                              -80.009,
                              81.684
                            ],
                            [
                              -80.009,
                              73.409
                            ],
                            [
                              -72.859,
                              73.409
                            ],
                            [
                              -68.795,
                              74.572
                            ],
                            [
                              -67.604,
                              77.241
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 2",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ind": 2,
                      "ty": "sh",
                      "ix": 3,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0.985,
                              0.677
                            ],
                            [
                              -0.417,
                              0.666
                            ],
                            [
                              0,
                              2.533
                            ],
                            [
                              2.279,
                              2.192
                            ],
                            [
                              3.897,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0.752,
                              -0.898
                            ],
                            [
                              0,
                              -1.196
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -0.741,
                              -0.844
                            ],
                            [
                              -1.115,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -2.338,
                              2.241
                            ],
                            [
                              0,
                              3.973
                            ],
                            [
                              1.526,
                              1.911
                            ]
                          ],
                          "o": [
                            [
                              0.514,
                              -0.547
                            ],
                            [
                              1.088,
                              -1.748
                            ],
                            [
                              0,
                              -3.637
                            ],
                            [
                              -2.224,
                              -2.132
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              -1.115,
                              0
                            ],
                            [
                              -0.725,
                              0.866
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              1.212
                            ],
                            [
                              0.763,
                              0.877
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              4.73,
                              0
                            ],
                            [
                              2.392,
                              -2.3
                            ],
                            [
                              0,
                              -2.847
                            ],
                            [
                              -0.769,
                              -0.953
                            ]
                          ],
                          "v": [
                            [
                              -62.901,
                              85.121
                            ],
                            [
                              -61.499,
                              83.302
                            ],
                            [
                              -59.859,
                              76.851
                            ],
                            [
                              -63.296,
                              68.061
                            ],
                            [
                              -72.518,
                              64.852
                            ],
                            [
                              -84.003,
                              64.852
                            ],
                            [
                              -86.861,
                              66.226
                            ],
                            [
                              -87.954,
                              69.328
                            ],
                            [
                              -87.954,
                              103.16
                            ],
                            [
                              -86.834,
                              106.256
                            ],
                            [
                              -84.003,
                              107.577
                            ],
                            [
                              -72.226,
                              107.577
                            ],
                            [
                              -61.569,
                              104.199
                            ],
                            [
                              -57.965,
                              94.744
                            ],
                            [
                              -60.265,
                              87.578
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 3",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.313725501299,
                          0.580392181873,
                          1,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 2",
                  "np": 4,
                  "cix": 2,
                  "bm": 0,
                  "ix": 2,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 6",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 5,
                    "s": [
                      -87.959,
                      86.277
                    ],
                    "to": [
                      0,
                      -0.833
                    ],
                    "ti": [
                      0,
                      0
                    ]
                  },
                  {
                    "i": {
                      "x": 0.833,
                      "y": 0.833
                    },
                    "o": {
                      "x": 0.167,
                      "y": 0.167
                    },
                    "t": 10,
                    "s": [
                      -87.959,
                      81.277
                    ],
                    "to": [
                      0,
                      0
                    ],
                    "ti": [
                      0,
                      -0.833
                    ]
                  },
                  {
                    "t": 15,
                    "s": [
                      -87.959,
                      86.277
                    ]
                  }
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  -87.961,
                  86.279
                ],
                "ix": 1
              },
              "s": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 3,
                    "s": [
                      100,
                      100
                    ]
                  },
                  {
                    "i": {
                      "x": [
                        0.833,
                        0.833
                      ],
                      "y": [
                        0.833,
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167,
                        0.167
                      ],
                      "y": [
                        0.167,
                        0.167
                      ]
                    },
                    "t": 8.454,
                    "s": [
                      120,
                      120
                    ]
                  },
                  {
                    "t": 13.9091796875,
                    "s": [
                      100,
                      100
                    ]
                  }
                ],
                "ix": 3,
                "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 8",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 5,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          18.959,
                          2.616
                        ],
                        [
                          -19.301,
                          -0.613
                        ]
                      ],
                      "o": [
                        [
                          -18.881,
                          2.884
                        ],
                        [
                          19.279,
                          -0.915
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          81.602,
                          142.731
                        ],
                        [
                          24.141,
                          143.195
                        ],
                        [
                          81.602,
                          142.731
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      1,
                      1,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ty": "gr",
                          "it": [
                            {
                              "ty": "gr",
                              "it": [
                                {
                                  "ind": 0,
                                  "ty": "sh",
                                  "ix": 1,
                                  "ks": {
                                    "a": 0,
                                    "k": {
                                      "i": [
                                        [
                                          -5.283,
                                          -1.065
                                        ],
                                        [
                                          -15.209,
                                          3.064
                                        ],
                                        [
                                          -1.155,
                                          5.265
                                        ],
                                        [
                                          3.541,
                                          15.351
                                        ],
                                        [
                                          4.896,
                                          1.31
                                        ],
                                        [
                                          0.346,
                                          0.069
                                        ],
                                        [
                                          73.556,
                                          -15.964
                                        ],
                                        [
                                          -0.676,
                                          -3.082
                                        ]
                                      ],
                                      "o": [
                                        [
                                          15.21,
                                          3.064
                                        ],
                                        [
                                          5.284,
                                          -1.064
                                        ],
                                        [
                                          3.434,
                                          -15.653
                                        ],
                                        [
                                          -1.14,
                                          -4.936
                                        ],
                                        [
                                          -0.263,
                                          -0.071
                                        ],
                                        [
                                          -40.908,
                                          18.24
                                        ],
                                        [
                                          0.412,
                                          4.7
                                        ],
                                        [
                                          1.155,
                                          5.265
                                        ]
                                      ],
                                      "v": [
                                        [
                                          -95.127,
                                          133.24
                                        ],
                                        [
                                          95.131,
                                          133.242
                                        ],
                                        [
                                          105.758,
                                          122.867
                                        ],
                                        [
                                          105.701,
                                          50.178
                                        ],
                                        [
                                          95.891,
                                          40.048
                                        ],
                                        [
                                          94.875,
                                          39.842
                                        ],
                                        [
                                          -107.381,
                                          110.969
                                        ],
                                        [
                                          -105.752,
                                          122.864
                                        ]
                                      ],
                                      "c": true
                                    },
                                    "ix": 2
                                  },
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "hd": false
                                },
                                {
                                  "ty": "fl",
                                  "c": {
                                    "a": 0,
                                    "k": [
                                      0.952941179276,
                                      0.945098042488,
                                      0.988235294819,
                                      1
                                    ],
                                    "ix": 4
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 5
                                  },
                                  "r": 1,
                                  "bm": 0,
                                  "nm": "Fill 1",
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "hd": false
                                },
                                {
                                  "ty": "tr",
                                  "p": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 2
                                  },
                                  "a": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 1
                                  },
                                  "s": {
                                    "a": 0,
                                    "k": [
                                      100,
                                      100
                                    ],
                                    "ix": 3
                                  },
                                  "r": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 6
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 7
                                  },
                                  "sk": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 4
                                  },
                                  "sa": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 5
                                  },
                                  "nm": "Transform"
                                }
                              ],
                              "nm": "Group 1",
                              "np": 2,
                              "cix": 2,
                              "bm": 0,
                              "ix": 1,
                              "mn": "ADBE Vector Group",
                              "hd": false
                            },
                            {
                              "ty": "tr",
                              "p": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 2
                              },
                              "a": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 1
                              },
                              "s": {
                                "a": 0,
                                "k": [
                                  100,
                                  100
                                ],
                                "ix": 3
                              },
                              "r": {
                                "a": 0,
                                "k": 0,
                                "ix": 6
                              },
                              "o": {
                                "a": 0,
                                "k": 100,
                                "ix": 7
                              },
                              "sk": {
                                "a": 0,
                                "k": 0,
                                "ix": 4
                              },
                              "sa": {
                                "a": 0,
                                "k": 0,
                                "ix": 5
                              },
                              "nm": "Transform"
                            }
                          ],
                          "nm": "Group 1",
                          "np": 1,
                          "cix": 2,
                          "bm": 0,
                          "ix": 1,
                          "mn": "ADBE Vector Group",
                          "hd": false
                        },
                        {
                          "ty": "gr",
                          "it": [
                            {
                              "ind": 0,
                              "ty": "sh",
                              "ix": 1,
                              "ks": {
                                "a": 0,
                                "k": {
                                  "i": [
                                    [
                                      15.717,
                                      -4.207
                                    ],
                                    [
                                      1.139,
                                      -4.937
                                    ],
                                    [
                                      -3.435,
                                      -15.653
                                    ],
                                    [
                                      -5.283,
                                      -1.065
                                    ],
                                    [
                                      -15.209,
                                      3.064
                                    ],
                                    [
                                      -1.155,
                                      5.265
                                    ],
                                    [
                                      3.541,
                                      15.351
                                    ],
                                    [
                                      4.895,
                                      1.311
                                    ]
                                  ],
                                  "o": [
                                    [
                                      -4.894,
                                      1.31
                                    ],
                                    [
                                      -3.541,
                                      15.35
                                    ],
                                    [
                                      1.155,
                                      5.265
                                    ],
                                    [
                                      15.21,
                                      3.064
                                    ],
                                    [
                                      5.283,
                                      -1.065
                                    ],
                                    [
                                      3.435,
                                      -15.653
                                    ],
                                    [
                                      -1.139,
                                      -4.937
                                    ],
                                    [
                                      -15.717,
                                      -4.208
                                    ]
                                  ],
                                  "v": [
                                    [
                                      -95.887,
                                      40.045
                                    ],
                                    [
                                      -105.696,
                                      50.175
                                    ],
                                    [
                                      -105.752,
                                      122.864
                                    ],
                                    [
                                      -95.126,
                                      133.24
                                    ],
                                    [
                                      95.131,
                                      133.243
                                    ],
                                    [
                                      105.758,
                                      122.867
                                    ],
                                    [
                                      105.701,
                                      50.178
                                    ],
                                    [
                                      95.892,
                                      40.048
                                    ]
                                  ],
                                  "c": true
                                },
                                "ix": 2
                              },
                              "nm": "Path 1",
                              "mn": "ADBE Vector Shape - Group",
                              "hd": false
                            },
                            {
                              "ty": "fl",
                              "c": {
                                "a": 0,
                                "k": [
                                  0.972549021244,
                                  0.976470589638,
                                  0.996078431606,
                                  1
                                ],
                                "ix": 4
                              },
                              "o": {
                                "a": 0,
                                "k": 100,
                                "ix": 5
                              },
                              "r": 1,
                              "bm": 0,
                              "nm": "Fill 1",
                              "mn": "ADBE Vector Graphic - Fill",
                              "hd": false
                            },
                            {
                              "ty": "tr",
                              "p": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 2
                              },
                              "a": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 1
                              },
                              "s": {
                                "a": 0,
                                "k": [
                                  100,
                                  100
                                ],
                                "ix": 3
                              },
                              "r": {
                                "a": 0,
                                "k": 0,
                                "ix": 6
                              },
                              "o": {
                                "a": 0,
                                "k": 100,
                                "ix": 7
                              },
                              "sk": {
                                "a": 0,
                                "k": 0,
                                "ix": 4
                              },
                              "sa": {
                                "a": 0,
                                "k": 0,
                                "ix": 5
                              },
                              "nm": "Transform"
                            }
                          ],
                          "nm": "Group 2",
                          "np": 2,
                          "cix": 2,
                          "bm": 0,
                          "ix": 2,
                          "mn": "ADBE Vector Group",
                          "hd": false
                        },
                        {
                          "ty": "gr",
                          "it": [
                            {
                              "ty": "gr",
                              "it": [
                                {
                                  "ind": 0,
                                  "ty": "sh",
                                  "ix": 1,
                                  "ks": {
                                    "a": 0,
                                    "k": {
                                      "i": [
                                        [
                                          -10.938,
                                          -2.21
                                        ],
                                        [
                                          -19.978,
                                          0
                                        ],
                                        [
                                          -11.9,
                                          2.401
                                        ],
                                        [
                                          -2.365,
                                          10.818
                                        ],
                                        [
                                          4.011,
                                          17.357
                                        ],
                                        [
                                          4.2,
                                          3.791
                                        ],
                                        [
                                          88.028,
                                          -16.076
                                        ],
                                        [
                                          -0.722,
                                          -3.287
                                        ]
                                      ],
                                      "o": [
                                        [
                                          11.9,
                                          2.394
                                        ],
                                        [
                                          19.977,
                                          0
                                        ],
                                        [
                                          10.931,
                                          -2.203
                                        ],
                                        [
                                          3.976,
                                          -18.085
                                        ],
                                        [
                                          -1.317,
                                          -5.723
                                        ],
                                        [
                                          -28.988,
                                          13.406
                                        ],
                                        [
                                          0.457,
                                          4.667
                                        ],
                                        [
                                          2.365,
                                          10.84
                                        ]
                                      ],
                                      "v": [
                                        [
                                          -97.984,
                                          147.422
                                        ],
                                        [
                                          0.006,
                                          150
                                        ],
                                        [
                                          97.995,
                                          147.415
                                        ],
                                        [
                                          119.879,
                                          125.969
                                        ],
                                        [
                                          119.794,
                                          46.94
                                        ],
                                        [
                                          111.206,
                                          32.436
                                        ],
                                        [
                                          -121.647,
                                          113.845
                                        ],
                                        [
                                          -119.882,
                                          125.947
                                        ]
                                      ],
                                      "c": true
                                    },
                                    "ix": 2
                                  },
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "hd": false
                                },
                                {
                                  "ty": "fl",
                                  "c": {
                                    "a": 0,
                                    "k": [
                                      0.870588243008,
                                      0.874509811401,
                                      0.984313726425,
                                      1
                                    ],
                                    "ix": 4
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 5
                                  },
                                  "r": 1,
                                  "bm": 0,
                                  "nm": "Fill 1",
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "hd": false
                                },
                                {
                                  "ty": "tr",
                                  "p": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 2
                                  },
                                  "a": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 1
                                  },
                                  "s": {
                                    "a": 0,
                                    "k": [
                                      100,
                                      100
                                    ],
                                    "ix": 3
                                  },
                                  "r": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 6
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 7
                                  },
                                  "sk": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 4
                                  },
                                  "sa": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 5
                                  },
                                  "nm": "Transform"
                                }
                              ],
                              "nm": "Group 1",
                              "np": 2,
                              "cix": 2,
                              "bm": 0,
                              "ix": 1,
                              "mn": "ADBE Vector Group",
                              "hd": false
                            },
                            {
                              "ty": "tr",
                              "p": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 2
                              },
                              "a": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 1
                              },
                              "s": {
                                "a": 0,
                                "k": [
                                  100,
                                  100
                                ],
                                "ix": 3
                              },
                              "r": {
                                "a": 0,
                                "k": 0,
                                "ix": 6
                              },
                              "o": {
                                "a": 0,
                                "k": 100,
                                "ix": 7
                              },
                              "sk": {
                                "a": 0,
                                "k": 0,
                                "ix": 4
                              },
                              "sa": {
                                "a": 0,
                                "k": 0,
                                "ix": 5
                              },
                              "nm": "Transform"
                            }
                          ],
                          "nm": "Group 3",
                          "np": 1,
                          "cix": 2,
                          "bm": 0,
                          "ix": 3,
                          "mn": "ADBE Vector Group",
                          "hd": false
                        },
                        {
                          "ty": "gr",
                          "it": [
                            {
                              "ty": "gr",
                              "it": [
                                {
                                  "ind": 0,
                                  "ty": "sh",
                                  "ix": 1,
                                  "ks": {
                                    "a": 0,
                                    "k": {
                                      "i": [
                                        [
                                          19.978,
                                          0
                                        ],
                                        [
                                          11.899,
                                          2.394
                                        ],
                                        [
                                          2.366,
                                          10.84
                                        ],
                                        [
                                          -4.018,
                                          17.386
                                        ],
                                        [
                                          -10.105,
                                          2.698
                                        ],
                                        [
                                          -25.86,
                                          0
                                        ],
                                        [
                                          -12.295,
                                          -3.298
                                        ],
                                        [
                                          -2.337,
                                          -10.155
                                        ],
                                        [
                                          3.976,
                                          -18.085
                                        ],
                                        [
                                          10.932,
                                          -2.203
                                        ]
                                      ],
                                      "o": [
                                        [
                                          -19.978,
                                          0
                                        ],
                                        [
                                          -10.939,
                                          -2.21
                                        ],
                                        [
                                          -3.969,
                                          -18.057
                                        ],
                                        [
                                          2.337,
                                          -10.155
                                        ],
                                        [
                                          12.287,
                                          -3.291
                                        ],
                                        [
                                          25.86,
                                          0
                                        ],
                                        [
                                          10.098,
                                          2.712
                                        ],
                                        [
                                          4.011,
                                          17.358
                                        ],
                                        [
                                          -2.366,
                                          10.819
                                        ],
                                        [
                                          -11.899,
                                          2.401
                                        ]
                                      ],
                                      "v": [
                                        [
                                          0.005,
                                          150
                                        ],
                                        [
                                          -97.984,
                                          147.422
                                        ],
                                        [
                                          -119.882,
                                          125.947
                                        ],
                                        [
                                          -119.784,
                                          46.919
                                        ],
                                        [
                                          -99.615,
                                          26.073
                                        ],
                                        [
                                          0.005,
                                          22.429
                                        ],
                                        [
                                          99.633,
                                          26.08
                                        ],
                                        [
                                          119.794,
                                          46.94
                                        ],
                                        [
                                          119.879,
                                          125.969
                                        ],
                                        [
                                          97.994,
                                          147.415
                                        ]
                                      ],
                                      "c": true
                                    },
                                    "ix": 2
                                  },
                                  "nm": "Path 1",
                                  "mn": "ADBE Vector Shape - Group",
                                  "hd": false
                                },
                                {
                                  "ty": "fl",
                                  "c": {
                                    "a": 0,
                                    "k": [
                                      0.913725495338,
                                      0.905882358551,
                                      0.988235294819,
                                      1
                                    ],
                                    "ix": 4
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 5
                                  },
                                  "r": 1,
                                  "bm": 0,
                                  "nm": "Fill 1",
                                  "mn": "ADBE Vector Graphic - Fill",
                                  "hd": false
                                },
                                {
                                  "ty": "tr",
                                  "p": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 2
                                  },
                                  "a": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 1
                                  },
                                  "s": {
                                    "a": 0,
                                    "k": [
                                      100,
                                      100
                                    ],
                                    "ix": 3
                                  },
                                  "r": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 6
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 7
                                  },
                                  "sk": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 4
                                  },
                                  "sa": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 5
                                  },
                                  "nm": "Transform"
                                }
                              ],
                              "nm": "Group 1",
                              "np": 2,
                              "cix": 2,
                              "bm": 0,
                              "ix": 1,
                              "mn": "ADBE Vector Group",
                              "hd": false
                            },
                            {
                              "ty": "tr",
                              "p": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 2
                              },
                              "a": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 1
                              },
                              "s": {
                                "a": 0,
                                "k": [
                                  100,
                                  100
                                ],
                                "ix": 3
                              },
                              "r": {
                                "a": 0,
                                "k": 0,
                                "ix": 6
                              },
                              "o": {
                                "a": 0,
                                "k": 100,
                                "ix": 7
                              },
                              "sk": {
                                "a": 0,
                                "k": 0,
                                "ix": 4
                              },
                              "sa": {
                                "a": 0,
                                "k": 0,
                                "ix": 5
                              },
                              "nm": "Transform"
                            }
                          ],
                          "nm": "Group 4",
                          "np": 1,
                          "cix": 2,
                          "bm": 0,
                          "ix": 4,
                          "mn": "ADBE Vector Group",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 4,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 1,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 7",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 6,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 100,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 4,
      "ty": 4,
      "nm": "Layer 4",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            192.679,
            293.471,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            -57.321,
            43.471,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.667,
                  0.667,
                  0.667
                ],
                "y": [
                  1,
                  1,
                  1
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0
                ]
              },
              "t": 13,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 19,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2,
          "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "Kleaner",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          3.894,
                          3.937
                        ],
                        [
                          -4.158,
                          -3.468
                        ],
                        [
                          0.145,
                          -1.04
                        ],
                        [
                          0.381,
                          -1.931
                        ],
                        [
                          -0.225,
                          2.082
                        ],
                        [
                          0.417,
                          0.314
                        ]
                      ],
                      "o": [
                        [
                          4.643,
                          2.858
                        ],
                        [
                          0.807,
                          0.673
                        ],
                        [
                          -0.278,
                          1.982
                        ],
                        [
                          0.074,
                          -2.107
                        ],
                        [
                          0.056,
                          -0.518
                        ],
                        [
                          -4.392,
                          -3.31
                        ]
                      ],
                      "v": [
                        [
                          -146.554,
                          -55.457
                        ],
                        [
                          -133.441,
                          -45.858
                        ],
                        [
                          -132.37,
                          -43.1
                        ],
                        [
                          -133.926,
                          -37.093
                        ],
                        [
                          -133.45,
                          -43.373
                        ],
                        [
                          -134.028,
                          -44.708
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      1,
                      1,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  -2.567,
                                  0.332
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.456,
                                  0.821
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -1.148,
                                  -2.069
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -1.019,
                                  -0.132
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  1.858,
                                  -1.61
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.174,
                                  -0.903
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  2.296,
                                  1.074
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.912,
                                  -0.426
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.439,
                                  2.274
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.738,
                                  0.639
                                ]
                              ],
                              "o": [
                                [
                                  -1.858,
                                  -1.61
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  1.02,
                                  -0.132
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  1.148,
                                  -2.069
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.456,
                                  0.821
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  2.567,
                                  0.332
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.738,
                                  0.639
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.439,
                                  2.274
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.912,
                                  -0.426
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -2.296,
                                  1.074
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.174,
                                  -0.903
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "v": [
                                [
                                  -149.051,
                                  -54.22
                                ],
                                [
                                  -147.317,
                                  -58.968
                                ],
                                [
                                  -131.933,
                                  -60.955
                                ],
                                [
                                  -129.576,
                                  -62.478
                                ],
                                [
                                  -122.696,
                                  -74.875
                                ],
                                [
                                  -117.083,
                                  -74.875
                                ],
                                [
                                  -110.203,
                                  -62.478
                                ],
                                [
                                  -107.847,
                                  -60.955
                                ],
                                [
                                  -92.463,
                                  -58.968
                                ],
                                [
                                  -90.728,
                                  -54.22
                                ],
                                [
                                  -101.86,
                                  -44.571
                                ],
                                [
                                  -102.76,
                                  -42.107
                                ],
                                [
                                  -100.133,
                                  -28.482
                                ],
                                [
                                  -104.674,
                                  -25.548
                                ],
                                [
                                  -118.433,
                                  -31.98
                                ],
                                [
                                  -121.346,
                                  -31.98
                                ],
                                [
                                  -135.106,
                                  -25.548
                                ],
                                [
                                  -139.647,
                                  -28.482
                                ],
                                [
                                  -137.019,
                                  -42.107
                                ],
                                [
                                  -137.92,
                                  -44.571
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              0.952941179276,
                              0.29411765933,
                              0.345098048449,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  -0.775,
                                  -0.673
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.18,
                                  -0.9
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -2.105,
                                  0.978
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.915,
                                  -0.423
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.055,
                                  1.98
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.743,
                                  0.642
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.133,
                                  0.822
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  1.142,
                                  -2.066
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "o": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.743,
                                  0.642
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.063,
                                  1.98
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.915,
                                  -0.423
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  2.105,
                                  0.978
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.18,
                                  -0.9
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0.775,
                                  -0.673
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -1.15,
                                  -2.066
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -0.133,
                                  0.822
                                ]
                              ],
                              "v": [
                                [
                                  -149.048,
                                  -46.37
                                ],
                                [
                                  -137.921,
                                  -36.722
                                ],
                                [
                                  -137.021,
                                  -31.667
                                ],
                                [
                                  -137.397,
                                  -29.719
                                ],
                                [
                                  -139.69,
                                  -28.115
                                ],
                                [
                                  -139.69,
                                  -20.056
                                ],
                                [
                                  -135.104,
                                  -17.701
                                ],
                                [
                                  -121.349,
                                  -24.132
                                ],
                                [
                                  -118.43,
                                  -24.132
                                ],
                                [
                                  -104.674,
                                  -17.701
                                ],
                                [
                                  -100.097,
                                  -20.056
                                ],
                                [
                                  -100.089,
                                  -20.056
                                ],
                                [
                                  -100.089,
                                  -27.935
                                ],
                                [
                                  -102.163,
                                  -28.592
                                ],
                                [
                                  -102.757,
                                  -31.667
                                ],
                                [
                                  -101.858,
                                  -36.722
                                ],
                                [
                                  -90.731,
                                  -46.37
                                ],
                                [
                                  -89.816,
                                  -48.749
                                ],
                                [
                                  -89.776,
                                  -48.749
                                ],
                                [
                                  -89.776,
                                  -56.597
                                ],
                                [
                                  -112.734,
                                  -56.597
                                ],
                                [
                                  -117.084,
                                  -64.437
                                ],
                                [
                                  -122.695,
                                  -64.437
                                ],
                                [
                                  -127.045,
                                  -56.597
                                ],
                                [
                                  -149.963,
                                  -56.597
                                ],
                                [
                                  -149.963,
                                  -48.749
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              0.882352948189,
                              0.070588238537,
                              0.149019613862,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 2",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 2,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0,
                              0
                            ],
                            [
                              0.795,
                              11.361
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "o": [
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "v": [
                            [
                              -103.948,
                              -33.276
                            ],
                            [
                              -102.071,
                              -54.008
                            ],
                            [
                              -89.777,
                              -56.597
                            ],
                            [
                              -44.007,
                              35.72
                            ],
                            [
                              -52.913,
                              30.843
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.996078431606,
                          0.737254917622,
                          0.121568627656,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              5.811,
                              6.923
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "o": [
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              5.445,
                              -7.183
                            ]
                          ],
                          "v": [
                            [
                              -142.399,
                              -41.165
                            ],
                            [
                              -128.06,
                              -44.462
                            ],
                            [
                              -126.934,
                              -35.458
                            ],
                            [
                              -69.537,
                              36.417
                            ],
                            [
                              -85.784,
                              28.763
                            ],
                            [
                              -139.69,
                              -20.056
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          0.996078431606,
                          0.737254917622,
                          0.121568627656,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0,
                              0
                            ],
                            [
                              7.44,
                              -9.815
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "o": [
                            [
                              10.644,
                              9.398
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ],
                            [
                              0,
                              0
                            ]
                          ],
                          "v": [
                            [
                              -149.963,
                              -48.749
                            ],
                            [
                              -139.69,
                              -20.056
                            ],
                            [
                              -69.542,
                              43.471
                            ],
                            [
                              -43.63,
                              36.48
                            ],
                            [
                              -89.776,
                              -56.597
                            ],
                            [
                              -117.187,
                              -50.824
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          1,
                          0.815686285496,
                          0.423529416323,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 3",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 13,
      "op": 113,
      "st": 13,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 5,
      "ty": 4,
      "nm": "Layer 3",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            308.405,
            287.591,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            58.405,
            37.591,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.667,
                  0.667,
                  0.667
                ],
                "y": [
                  1,
                  1,
                  1
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0
                ]
              },
              "t": 13,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 19,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2,
          "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "Kleaner",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          4.158,
                          -3.468
                        ],
                        [
                          -3.894,
                          3.937
                        ]
                      ],
                      "o": [
                        [
                          4.44,
                          -2.069
                        ],
                        [
                          -4.643,
                          2.858
                        ]
                      ],
                      "v": [
                        [
                          133.667,
                          -46.997
                        ],
                        [
                          146.779,
                          -56.596
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      1,
                      1,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          2.567,
                          0.332
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.456,
                          0.821
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.148,
                          -2.069
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.019,
                          -0.132
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.858,
                          -1.61
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.174,
                          -0.903
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.296,
                          1.074
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.912,
                          -0.426
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.439,
                          2.274
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.738,
                          0.639
                        ]
                      ],
                      "o": [
                        [
                          1.858,
                          -1.61
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.02,
                          -0.132
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.148,
                          -2.069
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.456,
                          0.821
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.567,
                          0.332
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.738,
                          0.639
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.439,
                          2.274
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.912,
                          -0.426
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          2.296,
                          1.074
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.174,
                          -0.903
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          149.051,
                          -54.22
                        ],
                        [
                          147.317,
                          -58.968
                        ],
                        [
                          131.933,
                          -60.955
                        ],
                        [
                          129.576,
                          -62.478
                        ],
                        [
                          122.696,
                          -74.875
                        ],
                        [
                          117.083,
                          -74.875
                        ],
                        [
                          110.203,
                          -62.478
                        ],
                        [
                          107.847,
                          -60.955
                        ],
                        [
                          92.463,
                          -58.968
                        ],
                        [
                          90.728,
                          -54.22
                        ],
                        [
                          101.86,
                          -44.571
                        ],
                        [
                          102.76,
                          -42.107
                        ],
                        [
                          100.133,
                          -28.482
                        ],
                        [
                          104.674,
                          -25.548
                        ],
                        [
                          118.433,
                          -31.98
                        ],
                        [
                          121.346,
                          -31.98
                        ],
                        [
                          135.106,
                          -25.548
                        ],
                        [
                          139.647,
                          -28.482
                        ],
                        [
                          137.019,
                          -42.107
                        ],
                        [
                          137.92,
                          -44.571
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.952941179276,
                      0.29411765933,
                      0.345098048449,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.775,
                          -0.673
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.18,
                          -0.9
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          2.105,
                          0.978
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.915,
                          -0.423
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.055,
                          1.98
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.743,
                          0.642
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.133,
                          0.822
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.142,
                          -2.066
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          -0.743,
                          0.642
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.063,
                          1.98
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.915,
                          -0.423
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.105,
                          0.978
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.18,
                          -0.9
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.775,
                          -0.673
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.15,
                          -2.066
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0.133,
                          0.822
                        ]
                      ],
                      "v": [
                        [
                          149.048,
                          -46.37
                        ],
                        [
                          137.921,
                          -36.722
                        ],
                        [
                          137.021,
                          -31.667
                        ],
                        [
                          137.397,
                          -29.719
                        ],
                        [
                          139.69,
                          -28.115
                        ],
                        [
                          139.69,
                          -20.056
                        ],
                        [
                          135.104,
                          -17.701
                        ],
                        [
                          121.349,
                          -24.132
                        ],
                        [
                          118.43,
                          -24.132
                        ],
                        [
                          104.674,
                          -17.701
                        ],
                        [
                          100.097,
                          -20.056
                        ],
                        [
                          100.089,
                          -20.056
                        ],
                        [
                          100.089,
                          -27.935
                        ],
                        [
                          102.163,
                          -28.592
                        ],
                        [
                          102.757,
                          -31.667
                        ],
                        [
                          101.858,
                          -36.722
                        ],
                        [
                          90.731,
                          -46.37
                        ],
                        [
                          89.816,
                          -48.749
                        ],
                        [
                          89.776,
                          -48.749
                        ],
                        [
                          89.776,
                          -56.597
                        ],
                        [
                          112.734,
                          -56.597
                        ],
                        [
                          117.084,
                          -64.437
                        ],
                        [
                          122.695,
                          -64.437
                        ],
                        [
                          127.045,
                          -56.597
                        ],
                        [
                          149.963,
                          -56.597
                        ],
                        [
                          149.963,
                          -48.749
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.882352948189,
                      0.070588238537,
                      0.149019613862,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 3",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          -0.795,
                          11.361
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          103.948,
                          -33.276
                        ],
                        [
                          102.071,
                          -54.008
                        ],
                        [
                          89.777,
                          -56.597
                        ],
                        [
                          44.007,
                          35.72
                        ],
                        [
                          52.913,
                          30.843
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.996078431606,
                      0.737254917622,
                      0.121568627656,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          -5.811,
                          6.923
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -5.445,
                          -7.183
                        ]
                      ],
                      "v": [
                        [
                          142.399,
                          -41.165
                        ],
                        [
                          128.06,
                          -44.462
                        ],
                        [
                          126.934,
                          -35.458
                        ],
                        [
                          69.537,
                          36.417
                        ],
                        [
                          85.784,
                          28.763
                        ],
                        [
                          139.69,
                          -20.056
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.996078431606,
                      0.737254917622,
                      0.121568627656,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          -7.44,
                          -9.815
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          -10.644,
                          9.398
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          149.963,
                          -48.749
                        ],
                        [
                          139.69,
                          -20.056
                        ],
                        [
                          69.542,
                          43.471
                        ],
                        [
                          43.63,
                          36.48
                        ],
                        [
                          89.776,
                          -56.597
                        ],
                        [
                          117.187,
                          -50.824
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      0.815686285496,
                      0.423529416323,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 3",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 3,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 3,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 13,
      "op": 113,
      "st": 13,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 6,
      "ty": 4,
      "nm": "Layer 2",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            250.002,
            282.436,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            0.002,
            32.436,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.667,
                  0.667,
                  0.667
                ],
                "y": [
                  1,
                  1,
                  1
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0
                ]
              },
              "t": 10,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 16,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2,
          "x": "var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "Kleaner",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        },
        {
          "ty": 5,
          "nm": "Kleaner 2",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 2,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  2.345,
                                  -4.345
                                ],
                                [
                                  3.603,
                                  -0.286
                                ],
                                [
                                  2.841,
                                  0.01
                                ],
                                [
                                  -2.777,
                                  0.486
                                ],
                                [
                                  -1.587,
                                  3.184
                                ],
                                [
                                  -2.957,
                                  3.971
                                ]
                              ],
                              "o": [
                                [
                                  -1.805,
                                  4.61
                                ],
                                [
                                  -1.79,
                                  3.876
                                ],
                                [
                                  -2.809,
                                  0.236
                                ],
                                [
                                  2.745,
                                  -0.732
                                ],
                                [
                                  3.008,
                                  -0.712
                                ],
                                [
                                  2.446,
                                  -4.289
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "v": [
                                [
                                  -7.924,
                                  -129.463
                                ],
                                [
                                  -14.278,
                                  -116.077
                                ],
                                [
                                  -24.317,
                                  -112.011
                                ],
                                [
                                  -32.794,
                                  -111.673
                                ],
                                [
                                  -24.51,
                                  -113.502
                                ],
                                [
                                  -15.922,
                                  -116.989
                                ],
                                [
                                  -7.924,
                                  -129.463
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              1,
                              1,
                              1,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ty": "gr",
                          "it": [
                            {
                              "ty": "gr",
                              "it": [
                                {
                                  "ty": "gr",
                                  "it": [
                                    {
                                      "ty": "gr",
                                      "it": [
                                        {
                                          "ind": 0,
                                          "ty": "sh",
                                          "ix": 1,
                                          "ks": {
                                            "a": 0,
                                            "k": {
                                              "i": [
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  4.933,
                                                  0.637
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0.876,
                                                  1.578
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  2.206,
                                                  -3.975
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  1.959,
                                                  -0.253
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -3.569,
                                                  -3.094
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0.334,
                                                  -1.735
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -4.412,
                                                  2.063
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -1.752,
                                                  -0.819
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0.843,
                                                  4.369
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -1.418,
                                                  1.229
                                                ]
                                              ],
                                              "o": [
                                                [
                                                  3.569,
                                                  -3.094
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -1.959,
                                                  -0.253
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -2.206,
                                                  -3.975
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -0.876,
                                                  1.578
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -4.933,
                                                  0.637
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  1.417,
                                                  1.229
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -0.843,
                                                  4.369
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  1.752,
                                                  -0.819
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  4.412,
                                                  2.063
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -0.335,
                                                  -1.735
                                                ],
                                                [
                                                  0,
                                                  0
                                                ]
                                              ],
                                              "v": [
                                                [
                                                  56.041,
                                                  -107.329
                                                ],
                                                [
                                                  52.708,
                                                  -116.452
                                                ],
                                                [
                                                  23.147,
                                                  -120.272
                                                ],
                                                [
                                                  18.618,
                                                  -123.197
                                                ],
                                                [
                                                  5.398,
                                                  -147.019
                                                ],
                                                [
                                                  -5.388,
                                                  -147.019
                                                ],
                                                [
                                                  -18.608,
                                                  -123.197
                                                ],
                                                [
                                                  -23.137,
                                                  -120.272
                                                ],
                                                [
                                                  -52.698,
                                                  -116.452
                                                ],
                                                [
                                                  -56.031,
                                                  -107.329
                                                ],
                                                [
                                                  -34.64,
                                                  -88.787
                                                ],
                                                [
                                                  -32.911,
                                                  -84.053
                                                ],
                                                [
                                                  -37.96,
                                                  -57.871
                                                ],
                                                [
                                                  -29.234,
                                                  -52.233
                                                ],
                                                [
                                                  -2.794,
                                                  -64.594
                                                ],
                                                [
                                                  2.804,
                                                  -64.594
                                                ],
                                                [
                                                  29.244,
                                                  -52.233
                                                ],
                                                [
                                                  37.97,
                                                  -57.871
                                                ],
                                                [
                                                  32.921,
                                                  -84.053
                                                ],
                                                [
                                                  34.65,
                                                  -88.787
                                                ]
                                              ],
                                              "c": true
                                            },
                                            "ix": 2
                                          },
                                          "nm": "Path 1",
                                          "mn": "ADBE Vector Shape - Group",
                                          "hd": false
                                        },
                                        {
                                          "ty": "fl",
                                          "c": {
                                            "a": 0,
                                            "k": [
                                              0.952941179276,
                                              0.29411765933,
                                              0.345098048449,
                                              1
                                            ],
                                            "ix": 4
                                          },
                                          "o": {
                                            "a": 0,
                                            "k": 100,
                                            "ix": 5
                                          },
                                          "r": 1,
                                          "bm": 0,
                                          "nm": "Fill 1",
                                          "mn": "ADBE Vector Graphic - Fill",
                                          "hd": false
                                        },
                                        {
                                          "ty": "tr",
                                          "p": {
                                            "a": 0,
                                            "k": [
                                              0,
                                              0
                                            ],
                                            "ix": 2
                                          },
                                          "a": {
                                            "a": 0,
                                            "k": [
                                              0,
                                              0
                                            ],
                                            "ix": 1
                                          },
                                          "s": {
                                            "a": 0,
                                            "k": [
                                              100,
                                              100
                                            ],
                                            "ix": 3
                                          },
                                          "r": {
                                            "a": 0,
                                            "k": 0,
                                            "ix": 6
                                          },
                                          "o": {
                                            "a": 0,
                                            "k": 100,
                                            "ix": 7
                                          },
                                          "sk": {
                                            "a": 0,
                                            "k": 0,
                                            "ix": 4
                                          },
                                          "sa": {
                                            "a": 0,
                                            "k": 0,
                                            "ix": 5
                                          },
                                          "nm": "Transform"
                                        }
                                      ],
                                      "nm": "Group 1",
                                      "np": 2,
                                      "cix": 2,
                                      "bm": 0,
                                      "ix": 1,
                                      "mn": "ADBE Vector Group",
                                      "hd": false
                                    },
                                    {
                                      "ty": "gr",
                                      "it": [
                                        {
                                          "ind": 0,
                                          "ty": "sh",
                                          "ix": 1,
                                          "ks": {
                                            "a": 0,
                                            "k": {
                                              "i": [
                                                [
                                                  1.489,
                                                  -1.293
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -0.346,
                                                  -1.729
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  4.044,
                                                  1.879
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  1.759,
                                                  -0.812
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0.105,
                                                  3.804
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  1.428,
                                                  1.233
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -0.255,
                                                  1.579
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -2.195,
                                                  -3.969
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ]
                                              ],
                                              "o": [
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -1.428,
                                                  1.233
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -0.12,
                                                  3.804
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -1.759,
                                                  -0.812
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -4.044,
                                                  1.879
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0.346,
                                                  -1.729
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  -1.489,
                                                  -1.293
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  2.21,
                                                  -3.969
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0,
                                                  0
                                                ],
                                                [
                                                  0.255,
                                                  1.579
                                                ]
                                              ],
                                              "v": [
                                                [
                                                  56.034,
                                                  -92.244
                                                ],
                                                [
                                                  34.654,
                                                  -73.706
                                                ],
                                                [
                                                  32.925,
                                                  -63.992
                                                ],
                                                [
                                                  33.646,
                                                  -60.248
                                                ],
                                                [
                                                  38.052,
                                                  -57.166
                                                ],
                                                [
                                                  38.052,
                                                  -41.68
                                                ],
                                                [
                                                  29.241,
                                                  -37.154
                                                ],
                                                [
                                                  2.808,
                                                  -49.513
                                                ],
                                                [
                                                  -2.8,
                                                  -49.513
                                                ],
                                                [
                                                  -29.232,
                                                  -37.154
                                                ],
                                                [
                                                  -38.028,
                                                  -41.68
                                                ],
                                                [
                                                  -38.043,
                                                  -41.68
                                                ],
                                                [
                                                  -38.043,
                                                  -56.82
                                                ],
                                                [
                                                  -34.059,
                                                  -58.083
                                                ],
                                                [
                                                  -32.916,
                                                  -63.992
                                                ],
                                                [
                                                  -34.645,
                                                  -73.706
                                                ],
                                                [
                                                  -56.025,
                                                  -92.244
                                                ],
                                                [
                                                  -57.785,
                                                  -96.815
                                                ],
                                                [
                                                  -57.86,
                                                  -96.815
                                                ],
                                                [
                                                  -57.86,
                                                  -111.896
                                                ],
                                                [
                                                  -13.746,
                                                  -111.896
                                                ],
                                                [
                                                  -5.386,
                                                  -126.961
                                                ],
                                                [
                                                  5.395,
                                                  -126.961
                                                ],
                                                [
                                                  13.754,
                                                  -111.896
                                                ],
                                                [
                                                  57.794,
                                                  -111.896
                                                ],
                                                [
                                                  57.794,
                                                  -96.815
                                                ]
                                              ],
                                              "c": true
                                            },
                                            "ix": 2
                                          },
                                          "nm": "Path 1",
                                          "mn": "ADBE Vector Shape - Group",
                                          "hd": false
                                        },
                                        {
                                          "ty": "fl",
                                          "c": {
                                            "a": 0,
                                            "k": [
                                              0.882352948189,
                                              0.070588238537,
                                              0.149019613862,
                                              1
                                            ],
                                            "ix": 4
                                          },
                                          "o": {
                                            "a": 0,
                                            "k": 100,
                                            "ix": 5
                                          },
                                          "r": 1,
                                          "bm": 0,
                                          "nm": "Fill 1",
                                          "mn": "ADBE Vector Graphic - Fill",
                                          "hd": false
                                        },
                                        {
                                          "ty": "tr",
                                          "p": {
                                            "a": 0,
                                            "k": [
                                              0,
                                              0
                                            ],
                                            "ix": 2
                                          },
                                          "a": {
                                            "a": 0,
                                            "k": [
                                              0,
                                              0
                                            ],
                                            "ix": 1
                                          },
                                          "s": {
                                            "a": 0,
                                            "k": [
                                              100,
                                              100
                                            ],
                                            "ix": 3
                                          },
                                          "r": {
                                            "a": 0,
                                            "k": 0,
                                            "ix": 6
                                          },
                                          "o": {
                                            "a": 0,
                                            "k": 100,
                                            "ix": 7
                                          },
                                          "sk": {
                                            "a": 0,
                                            "k": 0,
                                            "ix": 4
                                          },
                                          "sa": {
                                            "a": 0,
                                            "k": 0,
                                            "ix": 5
                                          },
                                          "nm": "Transform"
                                        }
                                      ],
                                      "nm": "Group 2",
                                      "np": 2,
                                      "cix": 2,
                                      "bm": 0,
                                      "ix": 2,
                                      "mn": "ADBE Vector Group",
                                      "hd": false
                                    },
                                    {
                                      "ty": "tr",
                                      "p": {
                                        "a": 0,
                                        "k": [
                                          0,
                                          0
                                        ],
                                        "ix": 2
                                      },
                                      "a": {
                                        "a": 0,
                                        "k": [
                                          0,
                                          0
                                        ],
                                        "ix": 1
                                      },
                                      "s": {
                                        "a": 0,
                                        "k": [
                                          100,
                                          100
                                        ],
                                        "ix": 3
                                      },
                                      "r": {
                                        "a": 0,
                                        "k": 0,
                                        "ix": 6
                                      },
                                      "o": {
                                        "a": 0,
                                        "k": 100,
                                        "ix": 7
                                      },
                                      "sk": {
                                        "a": 0,
                                        "k": 0,
                                        "ix": 4
                                      },
                                      "sa": {
                                        "a": 0,
                                        "k": 0,
                                        "ix": 5
                                      },
                                      "nm": "Transform"
                                    }
                                  ],
                                  "nm": "Group 1",
                                  "np": 2,
                                  "cix": 2,
                                  "bm": 0,
                                  "ix": 1,
                                  "mn": "ADBE Vector Group",
                                  "hd": false
                                },
                                {
                                  "ty": "tr",
                                  "p": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 2
                                  },
                                  "a": {
                                    "a": 0,
                                    "k": [
                                      0,
                                      0
                                    ],
                                    "ix": 1
                                  },
                                  "s": {
                                    "a": 0,
                                    "k": [
                                      100,
                                      100
                                    ],
                                    "ix": 3
                                  },
                                  "r": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 6
                                  },
                                  "o": {
                                    "a": 0,
                                    "k": 100,
                                    "ix": 7
                                  },
                                  "sk": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 4
                                  },
                                  "sa": {
                                    "a": 0,
                                    "k": 0,
                                    "ix": 5
                                  },
                                  "nm": "Transform"
                                }
                              ],
                              "nm": "Group 1",
                              "np": 1,
                              "cix": 2,
                              "bm": 0,
                              "ix": 1,
                              "mn": "ADBE Vector Group",
                              "hd": false
                            },
                            {
                              "ty": "tr",
                              "p": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 2
                              },
                              "a": {
                                "a": 0,
                                "k": [
                                  0,
                                  0
                                ],
                                "ix": 1
                              },
                              "s": {
                                "a": 0,
                                "k": [
                                  100,
                                  100
                                ],
                                "ix": 3
                              },
                              "r": {
                                "a": 0,
                                "k": 0,
                                "ix": 6
                              },
                              "o": {
                                "a": 0,
                                "k": 100,
                                "ix": 7
                              },
                              "sk": {
                                "a": 0,
                                "k": 0,
                                "ix": 4
                              },
                              "sa": {
                                "a": 0,
                                "k": 0,
                                "ix": 5
                              },
                              "nm": "Transform"
                            }
                          ],
                          "nm": "Group 1",
                          "np": 1,
                          "cix": 2,
                          "bm": 0,
                          "ix": 1,
                          "mn": "ADBE Vector Group",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 2",
                      "np": 1,
                      "cix": 2,
                      "bm": 0,
                      "ix": 2,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0.002,
                  -93.264
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0.002,
                  -93.264
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 1,
                "k": [
                  {
                    "i": {
                      "x": [
                        0.833
                      ],
                      "y": [
                        0.833
                      ]
                    },
                    "o": {
                      "x": [
                        0.167
                      ],
                      "y": [
                        0.167
                      ]
                    },
                    "t": 10,
                    "s": [
                      0
                    ]
                  },
                  {
                    "t": 19,
                    "s": [
                      360
                    ]
                  }
                ],
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 3",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          17.724,
                          -19.661
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -17.69,
                          -19.703
                        ]
                      ],
                      "v": [
                        [
                          -26.598,
                          -57.455
                        ],
                        [
                          -19.066,
                          32.436
                        ],
                        [
                          18.992,
                          32.436
                        ],
                        [
                          26.524,
                          -57.455
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      0.815686285496,
                      0.423529416323,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          57.776,
                          -96.833
                        ],
                        [
                          25.982,
                          32.436
                        ],
                        [
                          -26.056,
                          32.436
                        ],
                        [
                          -57.85,
                          -96.833
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.996078431606,
                      0.737254917622,
                      0.121568627656,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 10,
      "op": 110,
      "st": 10,
      "bm": 0
    }
  ],
  "markers": []
}