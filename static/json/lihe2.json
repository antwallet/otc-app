{
  "v": "5.7.11",
  "fr": 25,
  "ip": 0,
  "op": 68,
  "w": 250,
  "h": 250,
  "nm": "Comp 40",
  "ddd": 0,
  "assets": [],
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 4,
      "nm": "Layer 7",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 42,
              "s": [
                0
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 44,
              "s": [
                100
              ]
            },
            {
              "t": 46,
              "s": [
                0
              ]
            }
          ],
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            136.828,
            177.316,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            11.828,
            52.316,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 0,
          "k": [
            100,
            100,
            100
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0.564,
                      -0.103
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.038,
                      -0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.103,
                      0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.211,
                      0.038
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.565,
                      0.102
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.038,
                      0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.103,
                      -0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.211,
                      -0.038
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      -0.211,
                      0.038
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.103,
                      0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.038,
                      -0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.565,
                      -0.103
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.211,
                      -0.038
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.103,
                      -0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.038,
                      0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.565,
                      0.102
                    ]
                  ],
                  "v": [
                    [
                      25.4,
                      52.819
                    ],
                    [
                      14.703,
                      54.767
                    ],
                    [
                      14.288,
                      55.182
                    ],
                    [
                      12.339,
                      65.893
                    ],
                    [
                      11.324,
                      65.893
                    ],
                    [
                      9.375,
                      55.182
                    ],
                    [
                      8.961,
                      54.767
                    ],
                    [
                      -1.745,
                      52.819
                    ],
                    [
                      -1.745,
                      51.804
                    ],
                    [
                      8.96,
                      49.864
                    ],
                    [
                      9.376,
                      49.449
                    ],
                    [
                      11.324,
                      38.739
                    ],
                    [
                      12.339,
                      38.739
                    ],
                    [
                      14.288,
                      49.449
                    ],
                    [
                      14.703,
                      49.864
                    ],
                    [
                      25.4,
                      51.804
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  1,
                  1,
                  1,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 4,
      "nm": "Layer 6",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 36,
              "s": [
                0
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 38,
              "s": [
                100
              ]
            },
            {
              "t": 40,
              "s": [
                0
              ]
            }
          ],
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            123.23,
            89.472,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            -1.77,
            -35.528,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 0,
          "k": [
            100,
            100,
            100
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0.564,
                      -0.103
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.038,
                      -0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.103,
                      0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.211,
                      0.038
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.565,
                      0.102
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.038,
                      0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.103,
                      -0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.211,
                      -0.038
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      -0.211,
                      0.038
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.103,
                      0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.038,
                      -0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.565,
                      -0.103
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.211,
                      -0.038
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.103,
                      -0.564
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.038,
                      0.211
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.565,
                      0.102
                    ]
                  ],
                  "v": [
                    [
                      11.802,
                      -35.025
                    ],
                    [
                      1.105,
                      -33.077
                    ],
                    [
                      0.69,
                      -32.662
                    ],
                    [
                      -1.259,
                      -21.951
                    ],
                    [
                      -2.274,
                      -21.951
                    ],
                    [
                      -4.222,
                      -32.662
                    ],
                    [
                      -4.637,
                      -33.077
                    ],
                    [
                      -15.343,
                      -35.025
                    ],
                    [
                      -15.343,
                      -36.039
                    ],
                    [
                      -4.638,
                      -37.979
                    ],
                    [
                      -4.222,
                      -38.394
                    ],
                    [
                      -2.274,
                      -49.105
                    ],
                    [
                      -1.259,
                      -49.105
                    ],
                    [
                      0.69,
                      -38.394
                    ],
                    [
                      1.105,
                      -37.979
                    ],
                    [
                      11.802,
                      -36.039
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  1,
                  1,
                  1,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 3,
      "ty": 4,
      "nm": "Layer 4",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 31.812,
              "s": [
                100
              ]
            },
            {
              "t": 33.875,
              "s": [
                0
              ]
            }
          ],
          "ix": 11,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            39.549,
            149.046,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            -85.451,
            24.046,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "t": 27,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 29.0625,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          5.191,
                          2.785
                        ],
                        [
                          2.785,
                          -5.191
                        ],
                        [
                          -5.191,
                          -2.785
                        ],
                        [
                          -2.785,
                          5.191
                        ]
                      ],
                      "o": [
                        [
                          -5.191,
                          -2.785
                        ],
                        [
                          -2.785,
                          5.191
                        ],
                        [
                          5.191,
                          2.785
                        ],
                        [
                          2.785,
                          -5.191
                        ]
                      ],
                      "v": [
                        [
                          -80.402,
                          14.661
                        ],
                        [
                          -94.867,
                          19.024
                        ],
                        [
                          -90.504,
                          33.489
                        ],
                        [
                          -76.039,
                          29.127
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          5.648,
                          3.03
                        ],
                        [
                          -3.03,
                          5.647
                        ],
                        [
                          -5.648,
                          -3.03
                        ],
                        [
                          3.03,
                          -5.648
                        ]
                      ],
                      "o": [
                        [
                          -5.648,
                          -3.03
                        ],
                        [
                          3.03,
                          -5.648
                        ],
                        [
                          5.648,
                          3.03
                        ],
                        [
                          -3.03,
                          5.647
                        ]
                      ],
                      "v": [
                        [
                          -90.948,
                          34.318
                        ],
                        [
                          -95.695,
                          18.58
                        ],
                        [
                          -79.957,
                          13.833
                        ],
                        [
                          -75.211,
                          29.571
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 2",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          1.036,
                          -0.364
                        ],
                        [
                          0.364,
                          1.036
                        ],
                        [
                          -1.036,
                          0.364
                        ],
                        [
                          -0.364,
                          -1.036
                        ]
                      ],
                      "o": [
                        [
                          -1.036,
                          0.364
                        ],
                        [
                          -0.364,
                          -1.036
                        ],
                        [
                          1.036,
                          -0.364
                        ],
                        [
                          0.364,
                          1.036
                        ]
                      ],
                      "v": [
                        [
                          -79.618,
                          43.107
                        ],
                        [
                          -82.153,
                          41.892
                        ],
                        [
                          -80.937,
                          39.356
                        ],
                        [
                          -78.402,
                          40.572
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          1.036,
                          -0.364
                        ],
                        [
                          0.364,
                          1.036
                        ],
                        [
                          -1.036,
                          0.364
                        ],
                        [
                          -0.364,
                          -1.036
                        ]
                      ],
                      "o": [
                        [
                          -1.036,
                          0.364
                        ],
                        [
                          -0.364,
                          -1.036
                        ],
                        [
                          1.036,
                          -0.364
                        ],
                        [
                          0.364,
                          1.036
                        ]
                      ],
                      "v": [
                        [
                          -89.937,
                          8.736
                        ],
                        [
                          -92.472,
                          7.52
                        ],
                        [
                          -91.256,
                          4.985
                        ],
                        [
                          -88.721,
                          6.2
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0.627,
                      0.202
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.154,
                      -0.193
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.202,
                      0.627
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.193,
                      0.154
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.627,
                      -0.203
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.154,
                      0.193
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.202,
                      -0.627
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.193,
                      -0.154
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      -0.235,
                      -0.076
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.41,
                      0.515
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.076,
                      -0.235
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.515,
                      -0.41
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.235,
                      0.076
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.41,
                      -0.515
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.076,
                      0.235
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.516,
                      0.41
                    ]
                  ],
                  "v": [
                    [
                      -71.995,
                      31.952
                    ],
                    [
                      -83.875,
                      28.116
                    ],
                    [
                      -84.52,
                      28.31
                    ],
                    [
                      -92.305,
                      38.088
                    ],
                    [
                      -93.332,
                      37.538
                    ],
                    [
                      -89.489,
                      25.644
                    ],
                    [
                      -89.684,
                      24.999
                    ],
                    [
                      -99.457,
                      17.217
                    ],
                    [
                      -98.906,
                      16.191
                    ],
                    [
                      -87.023,
                      20.039
                    ],
                    [
                      -86.378,
                      19.845
                    ],
                    [
                      -78.592,
                      10.067
                    ],
                    [
                      -77.566,
                      10.617
                    ],
                    [
                      -81.408,
                      22.511
                    ],
                    [
                      -81.213,
                      23.156
                    ],
                    [
                      -71.445,
                      30.925
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  0.96862745285,
                  0.800000011921,
                  0.427450984716,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 3",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 3,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 4,
      "ty": 4,
      "nm": "Layer 3",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 26.812,
              "s": [
                100
              ]
            },
            {
              "t": 28.875,
              "s": [
                0
              ]
            }
          ],
          "ix": 11,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            208.485,
            145.776,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            83.485,
            20.776,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "t": 22,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 24.0625,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          5.365,
                          -2.432
                        ],
                        [
                          -2.432,
                          -5.365
                        ],
                        [
                          -5.365,
                          2.432
                        ],
                        [
                          2.432,
                          5.365
                        ]
                      ],
                      "o": [
                        [
                          -5.365,
                          2.432
                        ],
                        [
                          2.432,
                          5.365
                        ],
                        [
                          5.365,
                          -2.432
                        ],
                        [
                          -2.432,
                          -5.365
                        ]
                      ],
                      "v": [
                        [
                          79.089,
                          11.048
                        ],
                        [
                          73.768,
                          25.189
                        ],
                        [
                          87.909,
                          30.508
                        ],
                        [
                          93.23,
                          16.368
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          5.838,
                          -2.646
                        ],
                        [
                          2.646,
                          5.837
                        ],
                        [
                          -5.838,
                          2.646
                        ],
                        [
                          -2.646,
                          -5.838
                        ]
                      ],
                      "o": [
                        [
                          -5.838,
                          2.646
                        ],
                        [
                          -2.646,
                          -5.838
                        ],
                        [
                          5.838,
                          -2.646
                        ],
                        [
                          2.646,
                          5.837
                        ]
                      ],
                      "v": [
                        [
                          88.298,
                          31.365
                        ],
                        [
                          72.913,
                          25.577
                        ],
                        [
                          78.701,
                          10.191
                        ],
                        [
                          94.086,
                          15.98
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 2",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.34,
                          -1.044
                        ],
                        [
                          1.044,
                          0.34
                        ],
                        [
                          -0.34,
                          1.044
                        ],
                        [
                          -1.044,
                          -0.34
                        ]
                      ],
                      "o": [
                        [
                          -0.34,
                          1.044
                        ],
                        [
                          -1.044,
                          -0.34
                        ],
                        [
                          0.34,
                          -1.044
                        ],
                        [
                          1.044,
                          0.34
                        ]
                      ],
                      "v": [
                        [
                          102.162,
                          27.703
                        ],
                        [
                          99.657,
                          28.979
                        ],
                        [
                          98.381,
                          26.473
                        ],
                        [
                          100.887,
                          25.197
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.34,
                          -1.044
                        ],
                        [
                          1.044,
                          0.34
                        ],
                        [
                          -0.34,
                          1.044
                        ],
                        [
                          -1.044,
                          -0.34
                        ]
                      ],
                      "o": [
                        [
                          -0.34,
                          1.044
                        ],
                        [
                          -1.044,
                          -0.34
                        ],
                        [
                          0.34,
                          -1.044
                        ],
                        [
                          1.044,
                          0.34
                        ]
                      ],
                      "v": [
                        [
                          68.59,
                          15.023
                        ],
                        [
                          66.084,
                          16.298
                        ],
                        [
                          64.809,
                          13.793
                        ],
                        [
                          67.314,
                          12.517
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0.542,
                      -0.375
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.06,
                      -0.239
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.375,
                      0.541
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.239,
                      -0.06
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.542,
                      0.375
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.06,
                      0.239
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.375,
                      -0.541
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.239,
                      0.06
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      -0.203,
                      0.14
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.16,
                      0.639
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.14,
                      -0.203
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.639,
                      0.16
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.203,
                      -0.14
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.16,
                      -0.639
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.14,
                      0.203
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.639,
                      -0.161
                    ]
                  ],
                  "v": [
                    [
                      97.931,
                      14.872
                    ],
                    [
                      87.667,
                      21.979
                    ],
                    [
                      87.43,
                      22.609
                    ],
                    [
                      90.469,
                      34.734
                    ],
                    [
                      89.408,
                      35.214
                    ],
                    [
                      82.293,
                      24.938
                    ],
                    [
                      81.663,
                      24.7
                    ],
                    [
                      69.545,
                      27.737
                    ],
                    [
                      69.064,
                      26.676
                    ],
                    [
                      79.339,
                      19.574
                    ],
                    [
                      79.577,
                      18.943
                    ],
                    [
                      76.538,
                      6.819
                    ],
                    [
                      77.599,
                      6.338
                    ],
                    [
                      84.713,
                      16.615
                    ],
                    [
                      85.344,
                      16.852
                    ],
                    [
                      97.449,
                      13.811
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  0.96862745285,
                  0.800000011921,
                  0.427450984716,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 3",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 3,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 5,
      "ty": 4,
      "nm": "Layer 2",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 21.812,
              "s": [
                100
              ]
            },
            {
              "t": 23.875,
              "s": [
                0
              ]
            }
          ],
          "ix": 11,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            124.433,
            44.164,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            -0.567,
            -80.836,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "t": 17,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 19.0625,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          5.891,
                          0
                        ],
                        [
                          0,
                          -5.891
                        ],
                        [
                          -5.891,
                          0
                        ],
                        [
                          0,
                          5.891
                        ]
                      ],
                      "o": [
                        [
                          -5.891,
                          0
                        ],
                        [
                          0,
                          5.891
                        ],
                        [
                          5.891,
                          0
                        ],
                        [
                          0,
                          -5.891
                        ]
                      ],
                      "v": [
                        [
                          -0.567,
                          -91.519
                        ],
                        [
                          -11.251,
                          -80.836
                        ],
                        [
                          -0.567,
                          -70.153
                        ],
                        [
                          10.116,
                          -80.836
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ind": 1,
                  "ty": "sh",
                  "ix": 2,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          6.41,
                          0
                        ],
                        [
                          0,
                          6.409
                        ],
                        [
                          -6.41,
                          0
                        ],
                        [
                          0,
                          -6.409
                        ]
                      ],
                      "o": [
                        [
                          -6.41,
                          0
                        ],
                        [
                          0,
                          -6.409
                        ],
                        [
                          6.41,
                          0
                        ],
                        [
                          0,
                          6.409
                        ]
                      ],
                      "v": [
                        [
                          -0.567,
                          -69.213
                        ],
                        [
                          -12.191,
                          -80.836
                        ],
                        [
                          -0.567,
                          -92.46
                        ],
                        [
                          11.056,
                          -80.836
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 2",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 3,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.74,
                          -0.811
                        ],
                        [
                          0.811,
                          0.74
                        ],
                        [
                          -0.74,
                          0.811
                        ],
                        [
                          -0.811,
                          -0.74
                        ]
                      ],
                      "o": [
                        [
                          -0.74,
                          0.811
                        ],
                        [
                          -0.811,
                          -0.74
                        ],
                        [
                          0.74,
                          -0.811
                        ],
                        [
                          0.811,
                          0.74
                        ]
                      ],
                      "v": [
                        [
                          13.573,
                          -66.824
                        ],
                        [
                          10.764,
                          -66.697
                        ],
                        [
                          10.637,
                          -69.506
                        ],
                        [
                          13.445,
                          -69.633
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.74,
                          -0.811
                        ],
                        [
                          0.811,
                          0.74
                        ],
                        [
                          -0.74,
                          0.811
                        ],
                        [
                          -0.811,
                          -0.74
                        ]
                      ],
                      "o": [
                        [
                          -0.74,
                          0.811
                        ],
                        [
                          -0.811,
                          -0.74
                        ],
                        [
                          0.74,
                          -0.811
                        ],
                        [
                          0.811,
                          0.74
                        ]
                      ],
                      "v": [
                        [
                          -11.771,
                          -92.233
                        ],
                        [
                          -14.58,
                          -92.106
                        ],
                        [
                          -14.707,
                          -94.915
                        ],
                        [
                          -11.898,
                          -95.042
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0.648,
                      -0.118
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.044,
                      -0.242
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.118,
                      0.648
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.242,
                      0.044
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.648,
                      0.117
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.044,
                      0.243
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.118,
                      -0.648
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.243,
                      -0.044
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      -0.242,
                      0.044
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.118,
                      0.648
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.044,
                      -0.242
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      -0.648,
                      -0.118
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.243,
                      -0.044
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.118,
                      -0.648
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.044,
                      0.243
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0.648,
                      0.118
                    ]
                  ],
                  "v": [
                    [
                      15.015,
                      -80.258
                    ],
                    [
                      2.733,
                      -78.022
                    ],
                    [
                      2.257,
                      -77.546
                    ],
                    [
                      0.02,
                      -65.248
                    ],
                    [
                      -1.145,
                      -65.248
                    ],
                    [
                      -3.383,
                      -77.546
                    ],
                    [
                      -3.859,
                      -78.022
                    ],
                    [
                      -16.15,
                      -80.258
                    ],
                    [
                      -16.149,
                      -81.423
                    ],
                    [
                      -3.859,
                      -83.65
                    ],
                    [
                      -3.382,
                      -84.127
                    ],
                    [
                      -1.145,
                      -96.424
                    ],
                    [
                      0.02,
                      -96.424
                    ],
                    [
                      2.257,
                      -84.127
                    ],
                    [
                      2.734,
                      -83.65
                    ],
                    [
                      15.015,
                      -81.423
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  0.96862745285,
                  0.800000011921,
                  0.427450984716,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "bm": 0,
              "nm": "Fill 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 3",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 3,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 6,
      "ty": 4,
      "nm": "84",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 17,
              "s": [
                0
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 19,
              "s": [
                14.4
              ]
            },
            {
              "t": 21,
              "s": [
                0
              ]
            }
          ],
          "ix": 10,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "t": 0,
              "s": [
                125,
                -86.293,
                0
              ],
              "to": [
                0,
                34.25,
                0
              ],
              "ti": [
                0,
                -34.25,
                0
              ]
            },
            {
              "t": 4,
              "s": [
                125,
                119.207,
                0
              ]
            }
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            0,
            -5.793,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "t": 4,
              "s": [
                100,
                100,
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "t": 6,
              "s": [
                100,
                79.384,
                100
              ]
            },
            {
              "t": 8,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        },
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura 2",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 2,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0,
                              -2.987
                            ],
                            [
                              2.74,
                              0
                            ],
                            [
                              0,
                              2.987
                            ],
                            [
                              -2.74,
                              0
                            ]
                          ],
                          "o": [
                            [
                              0,
                              2.987
                            ],
                            [
                              -2.74,
                              0
                            ],
                            [
                              0,
                              -2.987
                            ],
                            [
                              2.74,
                              0
                            ]
                          ],
                          "v": [
                            [
                              -1.77,
                              -30.837
                            ],
                            [
                              -7.736,
                              -22.363
                            ],
                            [
                              -12.698,
                              -27.771
                            ],
                            [
                              -7.736,
                              -33.179
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          1,
                          0.458823531866,
                          0.43137255311,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  0,
                                  -3.233
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  9.032,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  -2.035
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "o": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  9.032
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -2.035,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -3.233,
                                  0
                                ]
                              ],
                              "v": [
                                [
                                  3.696,
                                  -30.875
                                ],
                                [
                                  3.696,
                                  -30.875
                                ],
                                [
                                  -12.658,
                                  -14.521
                                ],
                                [
                                  -12.658,
                                  -14.521
                                ],
                                [
                                  -16.342,
                                  -10.836
                                ],
                                [
                                  -16.342,
                                  -5.793
                                ],
                                [
                                  16.342,
                                  -5.793
                                ],
                                [
                                  16.342,
                                  -36.729
                                ],
                                [
                                  9.551,
                                  -36.729
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              0.988235294819,
                              0.290196090937,
                              0.196078434587,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 1,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "o": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "v": [
                                [
                                  16.342,
                                  -36.729
                                ],
                                [
                                  16.342,
                                  -5.793
                                ],
                                [
                                  -16.342,
                                  -5.793
                                ],
                                [
                                  -16.342,
                                  -36.729
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              1,
                              0.384313732386,
                              0.321568638086,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 2",
                  "np": 1,
                  "cix": 2,
                  "bm": 0,
                  "ix": 2,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  0,
                                  -4.068
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  4.068,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  1.32,
                                  1.32
                                ],
                                [
                                  0,
                                  1.998
                                ],
                                [
                                  -2.961,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -2.141,
                                  0.892
                                ],
                                [
                                  0,
                                  7.386
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "o": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  4.032
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -1.998,
                                  0
                                ],
                                [
                                  -1.32,
                                  -1.32
                                ],
                                [
                                  0,
                                  -2.962
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  2.462,
                                  0
                                ],
                                [
                                  6.423,
                                  -2.712
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  4.068,
                                  0
                                ]
                              ],
                              "v": [
                                [
                                  63.335,
                                  -29.415
                                ],
                                [
                                  63.335,
                                  -13.108
                                ],
                                [
                                  55.985,
                                  -5.793
                                ],
                                [
                                  -56.02,
                                  -5.793
                                ],
                                [
                                  -61.194,
                                  -7.934
                                ],
                                [
                                  -63.335,
                                  -13.108
                                ],
                                [
                                  -57.983,
                                  -18.46
                                ],
                                [
                                  9.42,
                                  -18.46
                                ],
                                [
                                  16.342,
                                  -19.852
                                ],
                                [
                                  27.261,
                                  -36.301
                                ],
                                [
                                  27.261,
                                  -36.729
                                ],
                                [
                                  55.985,
                                  -36.729
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              0.96862745285,
                              0.800000011921,
                              0.427450984716,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 3",
                  "np": 1,
                  "cix": 2,
                  "bm": 0,
                  "ix": 3,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ty": "gr",
                      "it": [
                        {
                          "ind": 0,
                          "ty": "sh",
                          "ix": 1,
                          "ks": {
                            "a": 0,
                            "k": {
                              "i": [
                                [
                                  0,
                                  -4.068
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  4.068,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  4.032
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -4.032,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ]
                              ],
                              "o": [
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  4.032
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  -4.032,
                                  0
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  0,
                                  -4.068
                                ],
                                [
                                  0,
                                  0
                                ],
                                [
                                  4.068,
                                  0
                                ]
                              ],
                              "v": [
                                [
                                  63.335,
                                  -29.415
                                ],
                                [
                                  63.335,
                                  -13.108
                                ],
                                [
                                  55.985,
                                  -5.793
                                ],
                                [
                                  -56.02,
                                  -5.793
                                ],
                                [
                                  -63.335,
                                  -13.108
                                ],
                                [
                                  -63.335,
                                  -29.415
                                ],
                                [
                                  -56.02,
                                  -36.729
                                ],
                                [
                                  55.985,
                                  -36.729
                                ]
                              ],
                              "c": true
                            },
                            "ix": 2
                          },
                          "nm": "Path 1",
                          "mn": "ADBE Vector Shape - Group",
                          "hd": false
                        },
                        {
                          "ty": "fl",
                          "c": {
                            "a": 0,
                            "k": [
                              0.976470589638,
                              0.843137264252,
                              0.552941203117,
                              1
                            ],
                            "ix": 4
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 5
                          },
                          "r": 1,
                          "bm": 0,
                          "nm": "Fill 1",
                          "mn": "ADBE Vector Graphic - Fill",
                          "hd": false
                        },
                        {
                          "ty": "tr",
                          "p": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 2
                          },
                          "a": {
                            "a": 0,
                            "k": [
                              0,
                              0
                            ],
                            "ix": 1
                          },
                          "s": {
                            "a": 0,
                            "k": [
                              100,
                              100
                            ],
                            "ix": 3
                          },
                          "r": {
                            "a": 0,
                            "k": 0,
                            "ix": 6
                          },
                          "o": {
                            "a": 0,
                            "k": 100,
                            "ix": 7
                          },
                          "sk": {
                            "a": 0,
                            "k": 0,
                            "ix": 4
                          },
                          "sa": {
                            "a": 0,
                            "k": 0,
                            "ix": 5
                          },
                          "nm": "Transform"
                        }
                      ],
                      "nm": "Group 1",
                      "np": 2,
                      "cix": 2,
                      "bm": 0,
                      "ix": 1,
                      "mn": "ADBE Vector Group",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 4",
                  "np": 1,
                  "cix": 2,
                  "bm": 0,
                  "ix": 4,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 4,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.676,
                          1.488
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.216,
                          -2.787
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.73,
                          1.375
                        ],
                        [
                          0.505,
                          1.544
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          2.482,
                          2.545
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.375,
                          1.73
                        ],
                        [
                          1.346,
                          -1.07
                        ],
                        [
                          -0.538,
                          -1.633
                        ]
                      ],
                      "v": [
                        [
                          -1.111,
                          -40.478
                        ],
                        [
                          -13.477,
                          -40.478
                        ],
                        [
                          -6.401,
                          -32.335
                        ],
                        [
                          -6.206,
                          -32.09
                        ],
                        [
                          -0.584,
                          -31.447
                        ],
                        [
                          0.727,
                          -35.831
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.886274516582,
                      0.243137255311,
                      0.176470592618,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          1.333,
                          0.905
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          2.985,
                          2.001
                        ],
                        [
                          -16.688,
                          -9.773
                        ],
                        [
                          -7.476,
                          -1.725
                        ],
                        [
                          -0.499,
                          2.163
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          -3.006,
                          -2.031
                        ],
                        [
                          -10.143,
                          2.368
                        ],
                        [
                          6.933,
                          4.088
                        ],
                        [
                          2.163,
                          0.499
                        ],
                        [
                          0.384,
                          -1.664
                        ]
                      ],
                      "v": [
                        [
                          -13.238,
                          -34.341
                        ],
                        [
                          -13.404,
                          -34.451
                        ],
                        [
                          -22.477,
                          -40.478
                        ],
                        [
                          -37.759,
                          -35.474
                        ],
                        [
                          -16.399,
                          -27.099
                        ],
                        [
                          -11.58,
                          -30.111
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.886274516582,
                      0.243137255311,
                      0.176470592618,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 3",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 3,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          3.006,
                          -2.031
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -0.384,
                          -1.664
                        ],
                        [
                          -2.163,
                          0.499
                        ],
                        [
                          -6.933,
                          4.088
                        ],
                        [
                          -1.742,
                          1.486
                        ],
                        [
                          -0.484,
                          0.466
                        ]
                      ],
                      "o": [
                        [
                          -2.985,
                          2.001
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.333,
                          0.905
                        ],
                        [
                          0.499,
                          2.163
                        ],
                        [
                          7.476,
                          -1.725
                        ],
                        [
                          1.754,
                          -1.027
                        ],
                        [
                          0.467,
                          -0.422
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          22.828,
                          -40.478
                        ],
                        [
                          13.755,
                          -34.451
                        ],
                        [
                          13.589,
                          -34.341
                        ],
                        [
                          11.931,
                          -30.111
                        ],
                        [
                          16.751,
                          -27.099
                        ],
                        [
                          38.11,
                          -35.474
                        ],
                        [
                          43.3,
                          -39.157
                        ],
                        [
                          44.733,
                          -40.478
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.886274516582,
                      0.243137255311,
                      0.176470592618,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 4",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 4,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0.538,
                          -1.633
                        ],
                        [
                          -1.346,
                          -1.07
                        ],
                        [
                          -1.375,
                          1.73
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.482,
                          2.545
                        ]
                      ],
                      "o": [
                        [
                          -0.676,
                          1.488
                        ],
                        [
                          -0.505,
                          1.544
                        ],
                        [
                          1.73,
                          1.375
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          2.216,
                          -2.787
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          1.462,
                          -40.478
                        ],
                        [
                          -0.376,
                          -35.831
                        ],
                        [
                          0.935,
                          -31.447
                        ],
                        [
                          6.557,
                          -32.09
                        ],
                        [
                          6.752,
                          -32.335
                        ],
                        [
                          13.829,
                          -40.478
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.886274516582,
                      0.243137255311,
                      0.176470592618,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 5",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 5,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              -0.078,
                              -0.138
                            ],
                            [
                              0.034,
                              0.019
                            ]
                          ],
                          "o": [
                            [
                              -0.033,
                              -0.132
                            ],
                            [
                              -0.014,
                              0.013
                            ]
                          ],
                          "v": [
                            [
                              -35.26,
                              -47.526
                            ],
                            [
                              -35.365,
                              -47.771
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          1,
                          0.384313732386,
                          0.321568638086,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              -0.01,
                              0.055
                            ],
                            [
                              -0.562,
                              1.127
                            ],
                            [
                              -8.531,
                              -2.643
                            ],
                            [
                              -3.07,
                              -2.906
                            ],
                            [
                              -2.083,
                              -3.353
                            ],
                            [
                              -1.261,
                              -3.679
                            ],
                            [
                              0.31,
                              0.948
                            ],
                            [
                              2.063,
                              3.421
                            ],
                            [
                              3.132,
                              2.88
                            ],
                            [
                              4.763,
                              1.394
                            ],
                            [
                              0.975,
                              -7.764
                            ],
                            [
                              -0.165,
                              -1.13
                            ]
                          ],
                          "o": [
                            [
                              0.167,
                              -1.326
                            ],
                            [
                              4.421,
                              -7.201
                            ],
                            [
                              4.763,
                              1.394
                            ],
                            [
                              3.132,
                              2.88
                            ],
                            [
                              1.968,
                              3.263
                            ],
                            [
                              0.402,
                              -0.904
                            ],
                            [
                              -1.286,
                              -3.905
                            ],
                            [
                              -2.083,
                              -3.353
                            ],
                            [
                              -3.07,
                              -2.906
                            ],
                            [
                              -12.066,
                              -3.738
                            ],
                            [
                              -0.245,
                              1.273
                            ],
                            [
                              0.01,
                              -0.054
                            ]
                          ],
                          "v": [
                            [
                              -49.033,
                              -48.848
                            ],
                            [
                              -47.774,
                              -52.412
                            ],
                            [
                              -23.662,
                              -59.54
                            ],
                            [
                              -12.016,
                              -52.604
                            ],
                            [
                              -4.308,
                              -43.133
                            ],
                            [
                              0.535,
                              -32.963
                            ],
                            [
                              0.727,
                              -35.831
                            ],
                            [
                              -4.308,
                              -46.523
                            ],
                            [
                              -12.016,
                              -55.995
                            ],
                            [
                              -23.662,
                              -62.931
                            ],
                            [
                              -49.033,
                              -52.238
                            ],
                            [
                              -49.047,
                              -48.69
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          1,
                          0.384313732386,
                          0.321568638086,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 6",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 6,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0.505,
                          1.544
                        ],
                        [
                          2.063,
                          3.421
                        ],
                        [
                          3.132,
                          2.881
                        ],
                        [
                          4.763,
                          1.393
                        ],
                        [
                          0.974,
                          -7.757
                        ],
                        [
                          -0.183,
                          -1.182
                        ],
                        [
                          -4.879,
                          -2.857
                        ],
                        [
                          -7.476,
                          -1.725
                        ],
                        [
                          -0.499,
                          2.163
                        ],
                        [
                          1.333,
                          0.905
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          5.1,
                          3.969
                        ],
                        [
                          0.92,
                          0.969
                        ],
                        [
                          -0.054,
                          0.049
                        ],
                        [
                          0.066,
                          -0.885
                        ],
                        [
                          0.239,
                          -0.287
                        ],
                        [
                          0.047,
                          -0.039
                        ],
                        [
                          -0.12,
                          0.071
                        ],
                        [
                          -0.138,
                          0.102
                        ],
                        [
                          -0.577,
                          0.098
                        ],
                        [
                          -2.282,
                          -0.34
                        ],
                        [
                          -2.449,
                          -1.716
                        ],
                        [
                          -4.126,
                          -5.191
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.73,
                          1.375
                        ]
                      ],
                      "o": [
                        [
                          -1.286,
                          -3.905
                        ],
                        [
                          -2.083,
                          -3.353
                        ],
                        [
                          -3.07,
                          -2.906
                        ],
                        [
                          -12.076,
                          -3.741
                        ],
                        [
                          -0.256,
                          1.333
                        ],
                        [
                          0.924,
                          5.613
                        ],
                        [
                          6.933,
                          4.088
                        ],
                        [
                          2.163,
                          0.499
                        ],
                        [
                          0.384,
                          -1.664
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -5.827,
                          -3.936
                        ],
                        [
                          -1.224,
                          -1.022
                        ],
                        [
                          -0.934,
                          -0.908
                        ],
                        [
                          0.092,
                          0.051
                        ],
                        [
                          -0.133,
                          0.401
                        ],
                        [
                          -0.062,
                          0.199
                        ],
                        [
                          0.07,
                          0.007
                        ],
                        [
                          0.156,
                          -0.073
                        ],
                        [
                          0.501,
                          -0.178
                        ],
                        [
                          2.179,
                          -0.969
                        ],
                        [
                          2.279,
                          0.402
                        ],
                        [
                          4.887,
                          3.434
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.375,
                          1.73
                        ],
                        [
                          1.346,
                          -1.07
                        ]
                      ],
                      "v": [
                        [
                          0.727,
                          -35.831
                        ],
                        [
                          -4.308,
                          -46.523
                        ],
                        [
                          -12.016,
                          -55.995
                        ],
                        [
                          -23.662,
                          -62.931
                        ],
                        [
                          -49.033,
                          -52.238
                        ],
                        [
                          -49.032,
                          -48.527
                        ],
                        [
                          -37.759,
                          -35.474
                        ],
                        [
                          -16.399,
                          -27.099
                        ],
                        [
                          -11.58,
                          -30.111
                        ],
                        [
                          -13.238,
                          -34.34
                        ],
                        [
                          -13.404,
                          -34.451
                        ],
                        [
                          -30.463,
                          -46.159
                        ],
                        [
                          -33.842,
                          -49.123
                        ],
                        [
                          -35.365,
                          -51.162
                        ],
                        [
                          -35.206,
                          -49.772
                        ],
                        [
                          -35.57,
                          -48.747
                        ],
                        [
                          -35.839,
                          -48.351
                        ],
                        [
                          -35.73,
                          -48.414
                        ],
                        [
                          -35.293,
                          -48.675
                        ],
                        [
                          -33.786,
                          -49.284
                        ],
                        [
                          -27.295,
                          -49.723
                        ],
                        [
                          -20.095,
                          -46.264
                        ],
                        [
                          -6.401,
                          -32.335
                        ],
                        [
                          -6.206,
                          -32.09
                        ],
                        [
                          -0.584,
                          -31.447
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.988235294819,
                      0.290196090937,
                      0.196078434587,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 7",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 7,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0.256,
                              1.333
                            ],
                            [
                              0.562,
                              1.127
                            ],
                            [
                              0.67,
                              0.684
                            ],
                            [
                              0.631,
                              0.43
                            ],
                            [
                              0.632,
                              0.374
                            ],
                            [
                              1.2,
                              0.302
                            ],
                            [
                              4.652,
                              -1.441
                            ],
                            [
                              3.07,
                              -2.906
                            ],
                            [
                              2.083,
                              -3.353
                            ],
                            [
                              1.286,
                              -3.905
                            ],
                            [
                              -0.2,
                              -0.747
                            ],
                            [
                              -1.787,
                              2.964
                            ],
                            [
                              -3.132,
                              2.88
                            ],
                            [
                              -4.763,
                              1.394
                            ],
                            [
                              -4.597,
                              -1.747
                            ],
                            [
                              -1.151,
                              -0.552
                            ],
                            [
                              -0.614,
                              -0.402
                            ],
                            [
                              -0.63,
                              -0.576
                            ],
                            [
                              -0.573,
                              -0.933
                            ],
                            [
                              -0.167,
                              -1.326
                            ],
                            [
                              -0.004,
                              -0.538
                            ],
                            [
                              -0.107,
                              0.648
                            ]
                          ],
                          "o": [
                            [
                              -0.167,
                              -1.326
                            ],
                            [
                              -0.573,
                              -0.933
                            ],
                            [
                              -0.63,
                              -0.576
                            ],
                            [
                              -0.614,
                              -0.402
                            ],
                            [
                              -1.151,
                              -0.552
                            ],
                            [
                              -4.597,
                              -1.747
                            ],
                            [
                              -4.763,
                              1.394
                            ],
                            [
                              -3.132,
                              2.88
                            ],
                            [
                              -2.063,
                              3.421
                            ],
                            [
                              -0.244,
                              0.746
                            ],
                            [
                              1.206,
                              -3.268
                            ],
                            [
                              2.083,
                              -3.353
                            ],
                            [
                              3.07,
                              -2.906
                            ],
                            [
                              4.652,
                              -1.441
                            ],
                            [
                              1.2,
                              0.302
                            ],
                            [
                              0.632,
                              0.374
                            ],
                            [
                              0.631,
                              0.43
                            ],
                            [
                              0.67,
                              0.684
                            ],
                            [
                              0.562,
                              1.127
                            ],
                            [
                              0.112,
                              0.58
                            ],
                            [
                              0.187,
                              -0.542
                            ],
                            [
                              0.183,
                              -1.182
                            ]
                          ],
                          "v": [
                            [
                              49.385,
                              -52.238
                            ],
                            [
                              48.125,
                              -55.803
                            ],
                            [
                              46.182,
                              -58.323
                            ],
                            [
                              44.201,
                              -59.985
                            ],
                            [
                              42.33,
                              -61.151
                            ],
                            [
                              38.825,
                              -62.59
                            ],
                            [
                              24.013,
                              -62.931
                            ],
                            [
                              12.367,
                              -55.995
                            ],
                            [
                              4.659,
                              -46.523
                            ],
                            [
                              -0.376,
                              -35.831
                            ],
                            [
                              -0.425,
                              -33.541
                            ],
                            [
                              4.055,
                              -42.719
                            ],
                            [
                              11.763,
                              -52.191
                            ],
                            [
                              23.409,
                              -59.127
                            ],
                            [
                              38.221,
                              -58.786
                            ],
                            [
                              41.726,
                              -57.347
                            ],
                            [
                              43.597,
                              -56.181
                            ],
                            [
                              45.578,
                              -54.519
                            ],
                            [
                              47.521,
                              -51.999
                            ],
                            [
                              48.781,
                              -48.434
                            ],
                            [
                              48.924,
                              -46.77
                            ],
                            [
                              49.383,
                              -48.527
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          1,
                          0.384313732386,
                          0.321568638086,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "gr",
              "it": [
                {
                  "ty": "gr",
                  "it": [
                    {
                      "ind": 0,
                      "ty": "sh",
                      "ix": 1,
                      "ks": {
                        "a": 0,
                        "k": {
                          "i": [
                            [
                              0.014,
                              0.013
                            ],
                            [
                              0.033,
                              -0.132
                            ]
                          ],
                          "o": [
                            [
                              -0.034,
                              0.019
                            ],
                            [
                              0.078,
                              -0.138
                            ]
                          ],
                          "v": [
                            [
                              35.112,
                              -47.358
                            ],
                            [
                              35.007,
                              -47.112
                            ]
                          ],
                          "c": true
                        },
                        "ix": 2
                      },
                      "nm": "Path 1",
                      "mn": "ADBE Vector Shape - Group",
                      "hd": false
                    },
                    {
                      "ty": "fl",
                      "c": {
                        "a": 0,
                        "k": [
                          1,
                          0.384313732386,
                          0.321568638086,
                          1
                        ],
                        "ix": 4
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 5
                      },
                      "r": 1,
                      "bm": 0,
                      "nm": "Fill 1",
                      "mn": "ADBE Vector Graphic - Fill",
                      "hd": false
                    },
                    {
                      "ty": "tr",
                      "p": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 2
                      },
                      "a": {
                        "a": 0,
                        "k": [
                          0,
                          0
                        ],
                        "ix": 1
                      },
                      "s": {
                        "a": 0,
                        "k": [
                          100,
                          100
                        ],
                        "ix": 3
                      },
                      "r": {
                        "a": 0,
                        "k": 0,
                        "ix": 6
                      },
                      "o": {
                        "a": 0,
                        "k": 100,
                        "ix": 7
                      },
                      "sk": {
                        "a": 0,
                        "k": 0,
                        "ix": 4
                      },
                      "sa": {
                        "a": 0,
                        "k": 0,
                        "ix": 5
                      },
                      "nm": "Transform"
                    }
                  ],
                  "nm": "Group 1",
                  "np": 2,
                  "cix": 2,
                  "bm": 0,
                  "ix": 1,
                  "mn": "ADBE Vector Group",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 2",
              "np": 1,
              "cix": 2,
              "bm": 0,
              "ix": 2,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 8",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 8,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          -0.505,
                          1.544
                        ],
                        [
                          -2.063,
                          3.421
                        ],
                        [
                          -3.132,
                          2.881
                        ],
                        [
                          -4.763,
                          1.393
                        ],
                        [
                          -4.597,
                          -1.747
                        ],
                        [
                          -1.151,
                          -0.552
                        ],
                        [
                          -0.614,
                          -0.403
                        ],
                        [
                          -0.63,
                          -0.576
                        ],
                        [
                          -0.573,
                          -0.933
                        ],
                        [
                          -0.167,
                          -1.326
                        ],
                        [
                          0.183,
                          -1.182
                        ],
                        [
                          0.366,
                          -0.904
                        ],
                        [
                          1.705,
                          -1.541
                        ],
                        [
                          1.754,
                          -1.027
                        ],
                        [
                          7.476,
                          -1.725
                        ],
                        [
                          0.499,
                          2.163
                        ],
                        [
                          -1.333,
                          0.905
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -5.1,
                          3.969
                        ],
                        [
                          -0.92,
                          0.969
                        ],
                        [
                          0.054,
                          0.049
                        ],
                        [
                          -0.066,
                          -0.885
                        ],
                        [
                          -0.239,
                          -0.287
                        ],
                        [
                          -0.047,
                          -0.039
                        ],
                        [
                          0.12,
                          0.071
                        ],
                        [
                          0.138,
                          0.102
                        ],
                        [
                          0.577,
                          0.098
                        ],
                        [
                          2.282,
                          -0.34
                        ],
                        [
                          2.449,
                          -1.716
                        ],
                        [
                          4.126,
                          -5.191
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.73,
                          1.375
                        ]
                      ],
                      "o": [
                        [
                          1.286,
                          -3.905
                        ],
                        [
                          2.083,
                          -3.353
                        ],
                        [
                          3.07,
                          -2.906
                        ],
                        [
                          4.652,
                          -1.441
                        ],
                        [
                          1.2,
                          0.302
                        ],
                        [
                          0.632,
                          0.374
                        ],
                        [
                          0.631,
                          0.43
                        ],
                        [
                          0.67,
                          0.683
                        ],
                        [
                          0.562,
                          1.127
                        ],
                        [
                          0.256,
                          1.333
                        ],
                        [
                          -0.188,
                          1.14
                        ],
                        [
                          -1.586,
                          3.249
                        ],
                        [
                          -1.742,
                          1.486
                        ],
                        [
                          -6.933,
                          4.088
                        ],
                        [
                          -2.163,
                          0.499
                        ],
                        [
                          -0.384,
                          -1.664
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          5.827,
                          -3.936
                        ],
                        [
                          1.224,
                          -1.022
                        ],
                        [
                          0.934,
                          -0.908
                        ],
                        [
                          -0.092,
                          0.051
                        ],
                        [
                          0.133,
                          0.401
                        ],
                        [
                          0.062,
                          0.199
                        ],
                        [
                          -0.07,
                          0.007
                        ],
                        [
                          -0.156,
                          -0.073
                        ],
                        [
                          -0.501,
                          -0.178
                        ],
                        [
                          -2.179,
                          -0.969
                        ],
                        [
                          -2.279,
                          0.402
                        ],
                        [
                          -4.887,
                          3.434
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -1.375,
                          1.73
                        ],
                        [
                          -1.346,
                          -1.07
                        ]
                      ],
                      "v": [
                        [
                          -0.376,
                          -35.831
                        ],
                        [
                          4.659,
                          -46.523
                        ],
                        [
                          12.367,
                          -55.995
                        ],
                        [
                          24.013,
                          -62.931
                        ],
                        [
                          38.825,
                          -62.59
                        ],
                        [
                          42.33,
                          -61.151
                        ],
                        [
                          44.201,
                          -59.985
                        ],
                        [
                          46.182,
                          -58.323
                        ],
                        [
                          48.125,
                          -55.803
                        ],
                        [
                          49.385,
                          -52.238
                        ],
                        [
                          49.383,
                          -48.527
                        ],
                        [
                          48.472,
                          -45.567
                        ],
                        [
                          43.3,
                          -39.157
                        ],
                        [
                          38.11,
                          -35.474
                        ],
                        [
                          16.75,
                          -27.099
                        ],
                        [
                          11.931,
                          -30.111
                        ],
                        [
                          13.589,
                          -34.34
                        ],
                        [
                          13.755,
                          -34.451
                        ],
                        [
                          30.814,
                          -46.159
                        ],
                        [
                          34.193,
                          -49.123
                        ],
                        [
                          35.716,
                          -51.162
                        ],
                        [
                          35.557,
                          -49.772
                        ],
                        [
                          35.921,
                          -48.747
                        ],
                        [
                          36.191,
                          -48.351
                        ],
                        [
                          36.082,
                          -48.414
                        ],
                        [
                          35.644,
                          -48.675
                        ],
                        [
                          34.137,
                          -49.284
                        ],
                        [
                          27.646,
                          -49.723
                        ],
                        [
                          20.447,
                          -46.264
                        ],
                        [
                          6.752,
                          -32.335
                        ],
                        [
                          6.557,
                          -32.09
                        ],
                        [
                          0.935,
                          -31.447
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.988235294819,
                      0.290196090937,
                      0.196078434587,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 9",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 9,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 7,
      "ty": 4,
      "nm": "Layer 1",
      "sr": 1,
      "ks": {
        "o": {
          "a": 0,
          "k": 100,
          "ix": 11
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "t": 0,
              "s": [
                124.982,
                -16.5,
                0
              ],
              "to": [
                0,
                34.25,
                0
              ],
              "ti": [
                0,
                -34.25,
                0
              ]
            },
            {
              "t": 4,
              "s": [
                124.982,
                189,
                0
              ]
            }
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            -0.018,
            64,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 0,
          "k": [
            100,
            91.828,
            100
          ],
          "ix": 6,
          "l": 2
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          2.956,
                          0
                        ],
                        [
                          0,
                          2.956
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.956,
                          0
                        ],
                        [
                          0,
                          -2.956
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          -2.956,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          -2.956
                        ],
                        [
                          2.956,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          2.956
                        ]
                      ],
                      "v": [
                        [
                          -45.59,
                          42.793
                        ],
                        [
                          -50.942,
                          37.441
                        ],
                        [
                          -50.942,
                          18.262
                        ],
                        [
                          -45.59,
                          12.91
                        ],
                        [
                          -40.238,
                          18.262
                        ],
                        [
                          -40.238,
                          37.441
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      0.890196084976,
                      0.670588254929,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          8.028
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          3.497,
                          -6.637
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          13.88,
                          -33.899
                        ],
                        [
                          13.88,
                          25.642
                        ],
                        [
                          -1.177,
                          20.825
                        ],
                        [
                          4.282,
                          -1.405
                        ],
                        [
                          4.282,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.886274516582,
                      0.243137255311,
                      0.176470592618,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 2",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 2,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          13.88,
                          -33.899
                        ],
                        [
                          13.88,
                          25.642
                        ],
                        [
                          -13.88,
                          16.758
                        ],
                        [
                          -13.88,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.988235294819,
                      0.290196090937,
                      0.196078434587,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 3",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 3,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -3.105,
                          5.994
                        ],
                        [
                          0,
                          8.028
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          5.245,
                          -4.139
                        ],
                        [
                          3.497,
                          -6.637
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          13.88,
                          -33.899
                        ],
                        [
                          13.88,
                          64
                        ],
                        [
                          -13.88,
                          64
                        ],
                        [
                          -13.88,
                          36.204
                        ],
                        [
                          -1.177,
                          20.825
                        ],
                        [
                          4.282,
                          -1.405
                        ],
                        [
                          4.282,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.988235294819,
                      0.290196090937,
                      0.196078434587,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 4",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 4,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          13.88,
                          -33.899
                        ],
                        [
                          13.88,
                          64
                        ],
                        [
                          -13.88,
                          64
                        ],
                        [
                          -13.88,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      1,
                      0.384313732386,
                      0.321568638086,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 5",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 5,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          8.028
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          3.497,
                          -6.637
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          56.234,
                          -33.899
                        ],
                        [
                          56.234,
                          39.237
                        ],
                        [
                          13.88,
                          25.642
                        ],
                        [
                          -1.177,
                          20.825
                        ],
                        [
                          4.282,
                          -1.405
                        ],
                        [
                          4.282,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.956862747669,
                      0.737254917622,
                      0.372549027205,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 6",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 6,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          56.234,
                          -33.899
                        ],
                        [
                          56.234,
                          39.237
                        ],
                        [
                          13.88,
                          25.642
                        ],
                        [
                          -13.88,
                          16.758
                        ],
                        [
                          -56.27,
                          3.163
                        ],
                        [
                          -56.27,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.956862747669,
                      0.737254917622,
                      0.372549027205,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 7",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 7,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          4.817,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          1.57,
                          1.605
                        ],
                        [
                          0,
                          2.426
                        ],
                        [
                          -4.746,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -8.207,
                          6.565
                        ],
                        [
                          -3.105,
                          5.994
                        ],
                        [
                          0,
                          8.028
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          4.817
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -2.426,
                          0
                        ],
                        [
                          -1.606,
                          -1.57
                        ],
                        [
                          0,
                          -4.746
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          11.311,
                          0
                        ],
                        [
                          5.245,
                          -4.139
                        ],
                        [
                          3.497,
                          -6.637
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          56.234,
                          -33.899
                        ],
                        [
                          56.234,
                          55.294
                        ],
                        [
                          47.528,
                          64
                        ],
                        [
                          -47.528,
                          64
                        ],
                        [
                          -53.701,
                          61.431
                        ],
                        [
                          -56.27,
                          55.258
                        ],
                        [
                          -47.671,
                          46.659
                        ],
                        [
                          -43.781,
                          46.659
                        ],
                        [
                          -13.88,
                          36.204
                        ],
                        [
                          -1.177,
                          20.825
                        ],
                        [
                          4.282,
                          -1.405
                        ],
                        [
                          4.282,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.96862745285,
                      0.800000011921,
                      0.427450984716,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 8",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 8,
          "mn": "ADBE Vector Group",
          "hd": false
        },
        {
          "ty": "gr",
          "it": [
            {
              "ty": "gr",
              "it": [
                {
                  "ind": 0,
                  "ty": "sh",
                  "ix": 1,
                  "ks": {
                    "a": 0,
                    "k": {
                      "i": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          4.817,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          4.817
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "o": [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          4.817
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -4.817,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      "v": [
                        [
                          56.234,
                          -33.899
                        ],
                        [
                          56.234,
                          55.258
                        ],
                        [
                          47.528,
                          64
                        ],
                        [
                          -47.528,
                          64
                        ],
                        [
                          -56.27,
                          55.258
                        ],
                        [
                          -56.27,
                          -33.899
                        ]
                      ],
                      "c": true
                    },
                    "ix": 2
                  },
                  "nm": "Path 1",
                  "mn": "ADBE Vector Shape - Group",
                  "hd": false
                },
                {
                  "ty": "fl",
                  "c": {
                    "a": 0,
                    "k": [
                      0.976470589638,
                      0.843137264252,
                      0.552941203117,
                      1
                    ],
                    "ix": 4
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 5
                  },
                  "r": 1,
                  "bm": 0,
                  "nm": "Fill 1",
                  "mn": "ADBE Vector Graphic - Fill",
                  "hd": false
                },
                {
                  "ty": "tr",
                  "p": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 2
                  },
                  "a": {
                    "a": 0,
                    "k": [
                      0,
                      0
                    ],
                    "ix": 1
                  },
                  "s": {
                    "a": 0,
                    "k": [
                      100,
                      100
                    ],
                    "ix": 3
                  },
                  "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                  },
                  "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                  },
                  "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                  },
                  "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                  },
                  "nm": "Transform"
                }
              ],
              "nm": "Group 1",
              "np": 2,
              "cix": 2,
              "bm": 0,
              "ix": 1,
              "mn": "ADBE Vector Group",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 9",
          "np": 1,
          "cix": 2,
          "bm": 0,
          "ix": 9,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 8,
      "ty": 4,
      "nm": "Layer 5",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "t": 11.857,
              "s": [
                100
              ]
            },
            {
              "t": 17,
              "s": [
                0
              ]
            }
          ],
          "ix": 11,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10
        },
        "p": {
          "a": 0,
          "k": [
            125,
            187.061,
            0
          ],
          "ix": 2,
          "l": 2
        },
        "a": {
          "a": 0,
          "k": [
            0,
            64,
            0
          ],
          "ix": 1,
          "l": 2
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "t": 5,
              "s": [
                0,
                0,
                100
              ]
            },
            {
              "t": 11.857421875,
              "s": [
                100,
                100,
                100
              ]
            }
          ],
          "ix": 6,
          "l": 2,
          "x": "var $bm_rt;\nvar fx = effect('ŝlosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"
        }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        },
        {
          "ty": 5,
          "nm": "ŝlosilo pli pura 2",
          "np": 34,
          "mn": "Pseudo/Duik Kleaner v3.2",
          "ix": 2,
          "en": 1,
          "ef": [
            {
              "ty": 7,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0001",
              "ix": 1,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 1
              }
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0002",
              "ix": 2,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 2
              }
            },
            {
              "ty": 7,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0003",
              "ix": 3,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 3
              }
            },
            {
              "ty": 6,
              "nm": "Anticipation",
              "mn": "Pseudo/Duik Kleaner v3.2-0004",
              "ix": 4,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Duration (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0005",
              "ix": 5,
              "v": {
                "a": 0,
                "k": 0.3,
                "ix": 5
              }
            },
            {
              "ty": 0,
              "nm": "Amplitude",
              "mn": "Pseudo/Duik Kleaner v3.2-0006",
              "ix": 6,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 6
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0007",
              "ix": 7,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0008",
              "ix": 8,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Slow In",
              "mn": "Pseudo/Duik Kleaner v3.2-0009",
              "ix": 9,
              "v": {
                "a": 0,
                "k": 60,
                "ix": 9
              }
            },
            {
              "ty": 0,
              "nm": "Slow Out",
              "mn": "Pseudo/Duik Kleaner v3.2-0010",
              "ix": 10,
              "v": {
                "a": 0,
                "k": 25,
                "ix": 10
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0011",
              "ix": 11,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Follow Through",
              "mn": "Pseudo/Duik Kleaner v3.2-0012",
              "ix": 12,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Elasticity",
              "mn": "Pseudo/Duik Kleaner v3.2-0013",
              "ix": 13,
              "v": {
                "a": 0,
                "k": 10,
                "ix": 13
              }
            },
            {
              "ty": 0,
              "nm": "Elasticity random",
              "mn": "Pseudo/Duik Kleaner v3.2-0014",
              "ix": 14,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 14
              }
            },
            {
              "ty": 0,
              "nm": "Damping",
              "mn": "Pseudo/Duik Kleaner v3.2-0015",
              "ix": 15,
              "v": {
                "a": 0,
                "k": 50,
                "ix": 15
              }
            },
            {
              "ty": 0,
              "nm": "Damping random",
              "mn": "Pseudo/Duik Kleaner v3.2-0016",
              "ix": 16,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 16
              }
            },
            {
              "ty": 7,
              "nm": "Bounce",
              "mn": "Pseudo/Duik Kleaner v3.2-0017",
              "ix": 17,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 17
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0018",
              "ix": 18,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Spatial Options",
              "mn": "Pseudo/Duik Kleaner v3.2-0019",
              "ix": 19,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Smart Interpolation",
              "mn": "Pseudo/Duik Kleaner v3.2-0020",
              "ix": 20,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 20
              }
            },
            {
              "ty": 7,
              "nm": "Mode",
              "mn": "Pseudo/Duik Kleaner v3.2-0021",
              "ix": 21,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 21
              }
            },
            {
              "ty": 6,
              "nm": "Overlap (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0022",
              "ix": 22,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Overlap",
              "mn": "Pseudo/Duik Kleaner v3.2-0023",
              "ix": 23,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 23
              }
            },
            {
              "ty": 0,
              "nm": "Delay (s)",
              "mn": "Pseudo/Duik Kleaner v3.2-0024",
              "ix": 24,
              "v": {
                "a": 0,
                "k": 0.05,
                "ix": 24
              }
            },
            {
              "ty": 0,
              "nm": "Overlap random",
              "mn": "Pseudo/Duik Kleaner v3.2-0025",
              "ix": 25,
              "v": {
                "a": 0,
                "k": 0,
                "ix": 25
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0026",
              "ix": 26,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "Soft Body (simulation)",
              "mn": "Pseudo/Duik Kleaner v3.2-0027",
              "ix": 27,
              "v": 0
            },
            {
              "ty": 7,
              "nm": "Soft Body",
              "mn": "Pseudo/Duik Kleaner v3.2-0028",
              "ix": 28,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 28
              }
            },
            {
              "ty": 0,
              "nm": "Soft-Body Flexibility",
              "mn": "Pseudo/Duik Kleaner v3.2-0029",
              "ix": 29,
              "v": {
                "a": 0,
                "k": 100,
                "ix": 29
              }
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0030",
              "ix": 30,
              "v": 0
            },
            {
              "ty": 6,
              "nm": "",
              "mn": "Pseudo/Duik Kleaner v3.2-0031",
              "ix": 31,
              "v": 0
            },
            {
              "ty": 0,
              "nm": "Precision",
              "mn": "Pseudo/Duik Kleaner v3.2-0032",
              "ix": 32,
              "v": {
                "a": 0,
                "k": 1,
                "ix": 32
              }
            }
          ]
        }
      ],
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0,
                      -13.122
                    ],
                    [
                      46.877,
                      0
                    ],
                    [
                      0,
                      13.122
                    ],
                    [
                      -46.877,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      13.122
                    ],
                    [
                      -46.877,
                      0
                    ],
                    [
                      0,
                      -13.122
                    ],
                    [
                      46.877,
                      0
                    ]
                  ],
                  "v": [
                    [
                      84.878,
                      64
                    ],
                    [
                      0,
                      87.76
                    ],
                    [
                      -84.878,
                      64
                    ],
                    [
                      0,
                      40.24
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "Path 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "st",
              "c": {
                "a": 0,
                "k": [
                  0.96862745285,
                  0.800000011921,
                  0.427450984716,
                  1
                ],
                "ix": 3
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 4
              },
              "w": {
                "a": 0,
                "k": 4,
                "ix": 5
              },
              "lc": 1,
              "lj": 1,
              "ml": 10,
              "bm": 0,
              "nm": "Stroke 1",
              "mn": "ADBE Vector Graphic - Stroke",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "Transform"
            }
          ],
          "nm": "Group 1",
          "np": 2,
          "cix": 2,
          "bm": 0,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 250,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": []
}